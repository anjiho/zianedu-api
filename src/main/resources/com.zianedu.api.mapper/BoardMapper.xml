<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zianedu.api.mapper.BoardMapper">

    <select id="selectTBbsDataList" resultType="TBbsDataVO">
        SELECT * FROM T_BBS_DATA
        WHERE BBS_MASTER_KEY = #{bbsMasterKey}
        AND CTG_KEY = #{teacherKey}
        ORDER BY BBS_KEY DESC
        <if test="listType =='LIMIT'">
            OFFSET 0 ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
        </if>
        <if test="listType =='PAGE'">
            OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
        </if>
    </select>

    <select id="selectTBbsDataListBySearch" resultType="ReferenceRoomVO">
        SELECT * FROM (
            SELECT
                A.BBS_KEY, A.BBS_PARENT_KEY, TO_CHAR(A.INDATE,'YYYY-MM-DD') as indate, A.TITLE, A.WRITE_USER_KEY, A.READ_COUNT, LEVEL, CONTENTS,
                (SELECT COUNT(BBS_COMMNET_KEY) FROM T_BBS_COMMENT T WHERE T.BBS_KEY = A.BBS_KEY) commentCount, A.PWD, A.IS_NOTICE,
                (SELECT NAME FROM T_USER WHERE USER_KEY = A.WRITE_USER_KEY) as writeUserName,
                TO_CHAR(A.INDATE,'YYYY.MM.DD') as indate2
            FROM T_BBS_DATA A
            WHERE 1=1
            AND A.IS_NOTICE = #{isNotice}
            AND A.BBS_MASTER_KEY = #{bbsMasterKey}
            AND A.CTG_KEY = #{teacherKey}
            START WITH A.BBS_PARENT_KEY = 0
            CONNECT BY PRIOR A.BBS_KEY = A.BBS_PARENT_KEY
            ORDER SIBLINGS BY A.BBS_PARENT_KEY DESC, A.BBS_KEY DESC
        ) Z
        WHERE 1=1
        <if test="searchType == 'title'">
            AND Z.TITLE LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'contents'">
            AND Z.CONTENTS LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'user'">
            AND Z.WRITE_USER_KEY IN ( SELECT USER_KEY FROM T_USER WHERE 1=1 AND NAME LIKE '%'||#{searchText}||'%' )
        </if>
        ORDER BY Z.IS_NOTICE DESC
        OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectTBbsDataListBySearchCount" resultType="Integer">
        SELECT * FROM (
            SELECT COUNT(A.BBS_KEY)
            FROM T_BBS_DATA A
            WHERE 1=1
            AND A.IS_NOTICE = #{isNotice}
            AND A.BBS_MASTER_KEY = #{bbsMasterKey}
            AND A.CTG_KEY = #{teacherKey}
            <if test="searchType == 'title'">
                AND A.TITLE LIKE '%'||#{searchText}||'%'
            </if>
            <if test="searchType == 'contents'">
                AND A.CONTENTS LIKE '%'||#{searchText}||'%'
            </if>
            <if test="searchType == 'user'">
                AND A.WRITE_USER_KEY IN ( SELECT USER_KEY FROM T_USER WHERE 1=1 AND NAME LIKE '%'||#{searchText}||'%' )
            </if>
        ) Z
        WHERE 1=1

    </select>

    <select id="selectGoodsReviewList" resultType="GoodsReviewVO">
        SELECT
            A.G_REVIEW_KEY, A.TITLE, A.POINT, B.NAME, TO_CHAR(A.indate, 'YYYY-MM-dd') as indate, A.CONTENTS
        FROM T_GOODS_REVIEW A
        INNER JOIN T_USER B
        ON A.USER_KEY = B.USER_KEY
        WHERE 1=1
        AND A.G_KEY IN ( SELECT G_KEY FROM T_GOODS_TEACHER_LINK WHERE TEACHER_KEY = #{teacherKey} )
        ORDER BY A.G_REVIEW_KEY DESC
        <if test="listType =='LIMIT'">
            OFFSET 0 ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
        </if>
        <if test="listType =='PAGE'">
            OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
        </if>
    </select>

    <select id="selectTeacherReviewList" resultType="GoodsReviewVO">
        SELECT
        A.G_REVIEW_KEY, A.TITLE, A.POINT, B.NAME, TO_CHAR(A.indate, 'YYYY.MM.dd') as indate, A.CONTENTS
        FROM T_GOODS_REVIEW A
        INNER JOIN T_USER B
        ON A.USER_KEY = B.USER_KEY
        WHERE 1=1
        <if test="gKey == 0">
            AND A.G_KEY IN ( SELECT G_KEY FROM T_GOODS_TEACHER_LINK WHERE TEACHER_KEY = #{teacherKey} )
        </if>
        <if test="gKey > 0">
            AND A.G_KEY = #{gKey}
        </if>
        ORDER BY A.G_REVIEW_KEY DESC
        OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectTeacherReviewListCount" resultType="Integer">
        SELECT COUNT(A.G_REVIEW_KEY)
        FROM T_GOODS_REVIEW A
        INNER JOIN T_USER B
        ON A.USER_KEY = B.USER_KEY
        WHERE 1=1
        <if test="gKey == 0">
            AND A.G_KEY IN ( SELECT G_KEY FROM T_GOODS_TEACHER_LINK WHERE TEACHER_KEY = #{teacherKey} )
        </if>
        <if test="gKey > 0">
            AND A.G_KEY = #{gKey}
        </if>
    </select>

    <select id="selectTeacherReferenceRoomDetailInfo" resultType="ReferenceRoomDetailVO">
        SELECT
            A.BBS_KEY, TO_CHAR(A.INDATE,'YYYY.MM.DD') as indate, A.TITLE, A.READ_COUNT,
            B.NAME as userName, B.USER_ID, A.CONTENTS, A.IS_NOTICE
        FROM T_BBS_DATA A
        INNER JOIN T_USER B
        ON A.WRITE_USER_KEY = B.USER_KEY
        WHERE A.BBS_KEY = #{bbsKey}
    </select>

    <select id="selectTeacherReferenceRoomPrevNext" resultType="PrevNextVO">
        SELECT T.* FROM (
            SELECT
                A.BBS_KEY,
                LEAD (A.TITLE,1,'이전글') OVER (ORDER BY A.BBS_KEY) prevTitle,
                LEAD (A.BBS_KEY,1) OVER (ORDER BY A.BBS_KEY) prevBbsKey,
                LEAD (A.WRITE_USER_KEY,1) OVER (ORDER BY A.BBS_KEY) prevWriteUserKey,
                LEAD (A.PWD,1) OVER (ORDER BY A.BBS_KEY) prevPwd,

                LAG  (A.TITLE,1,'다음글') OVER (ORDER BY A.BBS_KEY) nextTitle,
                LAG  (A.BBS_KEY,1) OVER (ORDER BY A.BBS_KEY) nextBbsKey,
                LAG  (A.WRITE_USER_KEY,1) OVER (ORDER BY A.BBS_KEY) nextWriteUserKey,
                LAG  (A.PWD,1)  OVER (ORDER BY A.BBS_KEY) nextPwd
            FROM T_BBS_DATA A
            INNER JOIN T_USER B
            ON A.WRITE_USER_KEY = B.USER_KEY
            WHERE A.BBS_MASTER_KEY = #{bbsMasterKey}
            AND A.CTG_KEY = #{teacherKey}
            AND A.IS_NOTICE = #{isNotice}
        ) T
        WHERE T.BBS_KEY = #{bbsKey}
    </select>

    <select id="selectNoticeList" resultType="NoticeListVO">
        SELECT * FROM (
                SELECT * FROM (
                    SELECT /*+index_desc (A PK_T_BBS_DATA) */
                    A.BBS_KEY, TO_CHAR(A.INDATE, 'YYYY.MM.DD') as createDate, A.TITLE, 0 as commentCnt,
                    A.WRITE_USER_KEY, TO_CHAR(A.INDATE, 'YYYY-MM-DD') as indate, A.IS_NOTICE, B.FILENAME,
                    (SELECT NAME FROM T_USER TU WHERE TU.USER_KEY = A.WRITE_USER_KEY) as writerName,
                    A.READ_COUNT
                    FROM T_BBS_DATA A
                    LEFT OUTER JOIN T_BBS_DATA_FILE B
                    ON A.BBS_KEY = B.BBS_KEY
                    WHERE A.BBS_MASTER_KEY = #{bbsMasterKey}
                    AND A.IS_NOTICE = 1
                    ORDER BY A.INDATE ASC
                )

                UNION ALL

                SELECT * FROM (
                    SELECT  /*+index_desc (B PK_T_BBS_DATA) */
                    B.BBS_KEY, TO_CHAR(B.INDATE, 'YYYY.MM.DD') as createDate, B.TITLE,
                    (SELECT COUNT(T.BBS_COMMNET_KEY) FROM T_BBS_COMMENT T WHERE T.BBS_KEY = B.BBS_KEY) as commentCnt,
                    B.WRITE_USER_KEY, TO_CHAR(INDATE, 'YYYY-MM-DD') as indate, IS_NOTICE, C.FILENAME,
                    (SELECT NAME FROM T_USER TU WHERE TU.USER_KEY = B.WRITE_USER_KEY) as writerName,
                    B.READ_COUNT
                    FROM T_BBS_DATA B
                    LEFT OUTER JOIN T_BBS_DATA_FILE C
                    ON B.BBS_KEY = C.BBS_KEY
                    WHERE B.BBS_MASTER_KEY = #{bbsMasterKey}
                    AND B.IS_NOTICE = 0
                    ORDER BY B.INDATE DESC
                )
            ) Z
        WHERE 1=1
        <if test="searchType == 'title'">
            AND Z.TITLE LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'name'">
            AND Z.WRITE_USER_KEY IN (SELECT USER_KEY FROM T_USER WHERE NAME LIKE '%'||#{searchText}||'%')
        </if>
        <if test="searchType == 'content'">
            AND Z.BBS_KEY IN (
                SELECT BBS_KEY FROM T_BBS_DATA WHERE CONTENTS LIKE '%'||#{searchText}||'%'
            )
        </if>
        OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectBannerNoticeList" resultType="NoticeListVO">
        SELECT * FROM (
            SELECT * FROM (
            SELECT  /*+index_desc (B PK_T_BBS_DATA) */
            BBS_KEY, TO_CHAR(INDATE, 'YYYY.MM.DD') as createDate, TITLE,
            (SELECT COUNT(T.BBS_COMMNET_KEY) FROM T_BBS_COMMENT T WHERE T.BBS_KEY = B.BBS_KEY) as commentCnt,
            B.WRITE_USER_KEY, TO_CHAR(INDATE, 'YYYY-MM-DD') as indate, IS_NOTICE
            FROM T_BBS_DATA B
            WHERE 1=1
            AND B.BBS_MASTER_KEY = #{bbsMasterKey}
            AND B.IS_NOTICE = 0
            )
        ) Z
        OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectCommunityList" resultType="CommunityListVO">
        SELECT * FROM (
            SELECT * FROM (
                SELECT
                    A.BBS_KEY, TO_CHAR(A.INDATE,'YYYY.MM.DD') as createDate,
                    TO_CHAR(A.INDATE,'YYYY-MM-DD') as indate, A.TITLE, A.WRITE_USER_KEY, A.READ_COUNT, 0 as level1,
                    (SELECT COUNT(BBS_COMMNET_KEY) FROM T_BBS_COMMENT T WHERE T.BBS_KEY = A.BBS_KEY) commentCount,
                    (SELECT NAME FROM T_USER T WHERE T.USER_KEY = A.WRITE_USER_KEY) as userName, A.PWD, A.IS_NOTICE
                FROM T_BBS_DATA A
                WHERE A.IS_NOTICE = 1
                AND A.BBS_MASTER_KEY = #{bbsMasterKey}
                <if test="searchType == 'title'">
                    AND A.TITLE LIKE '%'||#{searchText}||'%'
                </if>
                <if test="searchType == 'name'">
                    AND A.WRITE_USER_KEY IN (SELECT USER_KEY FROM T_USER WHERE NAME LIKE '%'||#{searchText}||'%')
                </if>
                <if test="searchType == 'content'">
                    AND A.BBS_KEY IN (
                        SELECT BBS_KEY FROM T_BBS_DATA WHERE CONTENTS LIKE '%'||#{searchText}||'%'
                    )
                </if>
            )

            UNION ALL

            SELECT * FROM (
                SELECT
                    A.BBS_KEY, TO_CHAR(A.INDATE,'YYYY.MM.DD') as createDate,
                    TO_CHAR(A.INDATE,'YYYY-MM-DD') as indate, A.TITLE, A.WRITE_USER_KEY, A.READ_COUNT, LEVEL,
                    (SELECT COUNT(BBS_COMMNET_KEY) FROM T_BBS_COMMENT T WHERE T.BBS_KEY = A.BBS_KEY) commentCount,
                    (SELECT NAME FROM T_USER T WHERE T.USER_KEY = A.WRITE_USER_KEY) as userName, A.PWD, A.IS_NOTICE
                FROM T_BBS_DATA A
                WHERE A.IS_NOTICE = 0
                AND A.BBS_MASTER_KEY = #{bbsMasterKey}
                <if test="searchType == 'title'">
                    AND A.TITLE LIKE '%'||#{searchText}||'%'
                </if>
                <if test="searchType == 'name'">
                    AND A.WRITE_USER_KEY IN (SELECT USER_KEY FROM T_USER WHERE NAME LIKE '%'||#{searchText}||'%')
                </if>
                <if test="searchType == 'content'">
                    AND A.BBS_KEY IN (
                        SELECT BBS_KEY FROM T_BBS_DATA WHERE CONTENTS LIKE '%'||#{searchText}||'%'
                    )
                </if>
                START WITH A.BBS_PARENT_KEY = 0
                CONNECT BY PRIOR A.BBS_KEY = A.BBS_PARENT_KEY
                ORDER SIBLINGS BY A.BBS_PARENT_KEY DESC, A.BBS_KEY DESC
                )
            )
        OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectNoticeListCount" resultType="Integer">
        SELECT COUNT (BBS_KEY)
        FROM T_BBS_DATA
        WHERE 1=1
        AND BBS_MASTER_KEY = #{bbsMasterKey}
        AND IS_NOTICE IN (0)
        <if test="searchType == 'title'">
            AND TITLE LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'name'">
            AND WRITE_USER_KEY IN (SELECT USER_KEY FROM T_USER WHERE NAME LIKE '%'||#{searchText}||'%')
        </if>
        <if test="searchType == 'content'">
            AND BBS_KEY IN (
                SELECT BBS_KEY FROM T_BBS_DATA WHERE CONTENTS LIKE '%'||#{searchText}||'%'
            )
        </if>
    </select>

    <select id="selectTBbsDataFileName" resultType="String">
        SELECT FILENAME FROM T_BBS_DATA_FILE WHERE BBS_KEY = #{bbsKey}
    </select>

    <select id="selectTBbsDataFileNameList" resultType="String">
        SELECT FILENAME FROM T_BBS_DATA_FILE WHERE BBS_KEY = #{bbsKey}
    </select>

    <select id="selectBoardDetailInfo" resultType="BoardDetailVO">
        SELECT
            A.BBS_KEY, A.TITLE, TO_CHAR(A.INDATE, 'YYYY.MM.DD') as indate, A.READ_COUNT, B.FILENAME, TRIM(A.CONTENTS) as contents,
            (SELECT USER_ID FROM T_USER T WHERE T.USER_KEY = A.WRITE_USER_KEY) as userId,
            (SELECT NAME FROM T_USER T WHERE T.USER_KEY = A.WRITE_USER_KEY) as userName
        FROM T_BBS_DATA A
        LEFT JOIN T_BBS_DATA_FILE B
        ON A.BBS_KEY = B.BBS_KEY
        WHERE A.BBS_KEY = #{bbsKey}
    </select>

    <select id="selectBoardCommentList" resultType="CommentListVO">
        SELECT
            /*+index_asc (A PK_T_BBS_COMMENT) */
            TO_CHAR(A.INDATE, 'YYYY.MM.DD') as indate, A.COMMENT_ as contents,
            (SELECT USER_ID FROM T_USER T WHERE T.USER_KEY = A.USER_KEY) as userId,
            (SELECT NAME FROM T_USER T WHERE T.USER_KEY = A.USER_KEY) as userName
        FROM T_BBS_COMMENT A
        WHERE BBS_KEY = #{bbsKey}
    </select>

    <select id="selectTBbsDataFile" resultType="TBbsDataFileVO">
        SELECT * FROM T_BBS_DATA_FILE WHERE BBS_KEY = #{bbsKey}
    </select>

    <select id="selectPassReviewList" resultType="NoticeListVO">
        SELECT Z.*
        FROM (
              SELECT  /*+index_desc (B PK_T_BBS_DATA) */
                  BBS_KEY, TO_CHAR(INDATE, 'YYYY.MM.DD') as createDate, TITLE,
                  (SELECT COUNT(T.BBS_COMMNET_KEY) FROM T_BBS_COMMENT T WHERE T.BBS_KEY = B.BBS_KEY) as commentCnt,
                  B.WRITE_USER_KEY, TO_CHAR(INDATE, 'YYYY-MM-DD') as indate, IS_NOTICE, B.CONTENTS
              FROM T_BBS_DATA B
              WHERE 1=1
              AND B.BBS_MASTER_KEY IN (10013,10032,10048)
              AND B.IS_NOTICE = 0
              )Z
        ORDER BY Z.BBS_KEY DESC
        OFFSET 0 ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectSignUpReviewList" resultType="NoticeListVO">
        SELECT Z.*
        FROM (
              SELECT  /*+index_desc (B PK_T_BBS_DATA) */
                  BBS_KEY, TO_CHAR(INDATE, 'YYYY.MM.DD') as createDate, TITLE,
                  (SELECT COUNT(T.BBS_COMMNET_KEY) FROM T_BBS_COMMENT T WHERE T.BBS_KEY = B.BBS_KEY) as commentCnt,
                  B.WRITE_USER_KEY, TO_CHAR(INDATE, 'YYYY-MM-DD') as indate, IS_NOTICE, B.CONTENTS
              FROM T_BBS_DATA B
              WHERE 1=1
              AND B.BBS_MASTER_KEY IN (10014,10033,10056)
              AND B.IS_NOTICE = 0
              )Z
        ORDER BY Z.BBS_KEY DESC
        OFFSET 0 ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectNoticePrevNextInfo" resultType="PrevNextVO">
        SELECT T.* FROM (
            SELECT
                A.BBS_KEY,
                LEAD (A.TITLE,1,'이전글') OVER (ORDER BY A.BBS_KEY) prevTitle,
                LEAD (A.BBS_KEY,1) OVER (ORDER BY A.BBS_KEY) prevBbsKey,
                LEAD (A.WRITE_USER_KEY,1) OVER (ORDER BY A.BBS_KEY) prevWriteUserKey,
                --LEAD (A.PWD,1) OVER (ORDER BY A.BBS_KEY) prevPwd,
                TO_CHAR(LEAD (A.INDATE, 1) OVER (ORDER BY A.BBS_KEY), 'YYYY.MM.DD') prevCreateDate,

                LAG  (A.TITLE,1,'다음글') OVER (ORDER BY A.BBS_KEY) nextTitle,
                LAG  (A.BBS_KEY,1) OVER (ORDER BY A.BBS_KEY) nextBbsKey,
                LAG  (A.WRITE_USER_KEY,1) OVER (ORDER BY A.BBS_KEY) nextWriteUserKey,
                --LAG  (A.PWD,1)  OVER (ORDER BY A.BBS_KEY) nextPwd,
                TO_CHAR(LAG (A.INDATE, 1) OVER (ORDER BY A.BBS_KEY), 'YYYY.MM.DD') nextCreateDate

            FROM T_BBS_DATA A
            INNER JOIN T_USER B
            ON A.WRITE_USER_KEY = B.USER_KEY
            WHERE A.BBS_MASTER_KEY = #{bbsMasterKey}
        ) T
        WHERE T.BBS_KEY = #{bbsKey}
    </select>

    <select id="selectLectureRoomTableList" resultType="LectureRoomTableVO">
        SELECT ACADEMY_NUMBER, TO_CHAR(LECTURE_DATE, 'YYYY-mm-dd') as lectureDate, FILE_NAME
         FROM T_LECTURE_ROOM_TABLE
        WHERE LECTURE_DATE = #{lectureDate}
        ORDER BY ACADEMY_NUMBER ASC
    </select>

    <insert id="insertTGoodsReview" parameterType="TGoodsReviewVO">
        <selectKey resultType="Integer" keyProperty="gReviewKey" order="BEFORE">
            SELECT T_GOODS_REVIEW_SEQ.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO T_GOODS_REVIEW
        (
            G_REVIEW_KEY, G_KEY, INDATE, USER_KEY, TITLE, CONTENTS, POINT
        )
        VALUES
        (
            #{gReviewKey}, #{gKey}, sysdate, #{userKey}, #{title}, #{contents}, #{point}
        )
    </insert>

    <insert id="insertTBbsComment" parameterType="TBbsCommentVO">
        <selectKey resultType="Integer" keyProperty="bbsCommentKey" order="BEFORE">
            SELECT T_BBS_COMMENT_SEQ.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO T_BBS_COMMENTw
        (
            BBS_COMMNET_KEY, BBS_KEY, USER_KEY, INDATE, COMMENT_
        )
        VALUES
        (
            #{bbsCommentKey}, #{bbsKey}, #{userKey}, sysdate, #{comment_}
        )
    </insert>

    <insert id="insertTBbsData" parameterType="TBbsDataVO">
        <selectKey resultType="Integer" keyProperty="bbsKey" order="BEFORE">
            SELECT T_BBS_DATA_SEQ.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO T_BBS_DATA
        (
            BBS_KEY, BBS_MASTER_KEY, BBS_PARENT_KEY, INDATE, TITLE, WRITE_USER_KEY, CTG_KEY,
            CTG_KEY_02, IS_NOTICE, PWD, CONTENTS, IS_HAVE_ANSWER, BBS_CUSTOM_KEY
        )
        VALUES
        (
            #{bbsKey}, #{bbsMasterKey}, #{bbsParentKey}, sysdate, #{title}, #{writeUserKey}, #{ctgKey},
            #{ctgKey02}, #{isNotice}, #{pwd}, #{contents}, #{isHaveAnswer}, #{bbsCustomKey}
        )
    </insert>

    <insert id="insertTBbsDataFile">
        <selectKey resultType="Integer" keyProperty="bbsFileKey" order="BEFORE">
            SELECT T_BBS_DATA_FILE_SEQ.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO T_BBS_DATA_FILE
        (
            BBS_FILE_KEY, BBS_KEY, FILENAME
        )
        VALUES
        (
            #{bbsFileKey}, #{bbsKey}, #{fileName}
        )
    </insert>

    <insert id="insertTLectureRoomTable" parameterType="LectureRoomTableVO">
        INSERT INTO T_LECTURE_ROOM_TABLE
        ( LECTURE_DATE, ACADEMY_NUMBER, FILE_NAME )
        VALUES
        ( #{lectureDate}, #{academyNumber}, #{fileName} )
    </insert>

    <update id="updateTBbsData" parameterType="TBbsDataVO">
        UPDATE T_BBS_DATA
        <set>
            <if test="title != ''">TITLE = #{title},</if>
            <if test="contents != ''">CONTENTS = #{contents},</if>
            <if test="pwd != ''">PWD = #{pwd},</if>
        </set>
        WHERE BBS_KEY = #{bbsKey}
    </update>

    <update id="updateTBbsDataFile">
        UPDATE T_BBS_DATA_FILE
        <set>
            <if test="fileName != ''">FILENAME = #{fileName}</if>
        </set>
        WHERE BBS_FILE_KEY = #{bbsFileKey}
    </update>

    <update id="updateTBbsComment">
        UPDATE T_BBS_COMMENT
        <set>
            <if test="comment != ''">COMMENT_ = #{comment}</if>
        </set>
        WHERE BBS_COMMNET_KEY = #{bbsCommentKey}
    </update>

    <update id="updateTBbsReadCount" parameterType="int">
        UPDATE T_BBS_DATA
        SET READ_COUNT = READ_COUNT + 1
        WHERE BBS_KEY = #{bbsKey}
    </update>

    <delete id="deleteTBbsData">
        DELETE FROM T_BBS_DATA WHERE BBS_KEY = #{bbsKey}
    </delete>

    <delete id="deleteTBbsDataFile">
        DELETE FROM T_BBS_DATA_FILE WHERE BBS_KEY = #{bbsKey}
    </delete>

    <delete id="deleteTBbsCommentFromBbsKey">
        DELETE FROM T_BBS_COMMENT WHERE BBS_KEY = #{bbsKey}
    </delete>

    <delete id="deleteTBbsComment">
        DELETE FROM T_BBS_COMMENT WHERE BBS_COMMNET_KEY = #{bbsCommentKey}
    </delete>

    <delete id="deleteTLectureRoomTable">
        DELETE FROM T_LECTURE_ROOM_TABLE
        WHERE LECTURE_DATE = #{lectureDate}
        AND ACADEMY_NUMBER = #{academyNumber}
    </delete>
</mapper>
