<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zianedu.api.mapper.ProductMapper">

    <resultMap id="promotionOnlineSignUpMap" type="OnlineSignUpVO">
        <result property="jKey" column="J_KEY"/>
        <result property="stepCtgKey" column="STEP_CTG_KEY"/>
        <result property="ctgName" column="CTG_NAME"/>
        <collection property="onlineSignUpSubjectList" javaType="java.util.ArrayList" resultMap="onlineSignUpSubjectListMap"/>
    </resultMap>
    <resultMap id="onlineSignUpSubjectListMap" type="OnlineSubjectListVO">
        <result property="jGKey" column="J_G_KEY"/>
        <result property="gKey" column="G_KEY"/>
        <result property="ctgName" column="CTG_NAME"/>
        <result property="ctgKey" column="CTG_KEY"/>
        <result property="subjectCtgKey" column="SUBJECT_CTG_KEY"/>
        <result property="startDate" column="START_DATE"/>
        <result property="endDate" column="END_DATE"/>
        <result property="name" column="NAME"/>
        <result property="pauseCnt" column="PAUSE_CNT"/>
        <result property="limitDay" column="LIMIT_DAY"/>
    </resultMap>

    <resultMap id="academyLectureListMap" type="AcademyLectureListVO">
        <result property="stepCtgKey" column="stepCtgKey"/>
        <result property="ctgName" column="CTG_NAME"/>
        <collection property="lectureList" javaType="java.util.ArrayList" resultMap="academyLectureListDetailMap"/>
    </resultMap>
    <resultMap id="academyLectureListDetailMap" type="AcademyLectureListDetailVO">
        <result property="gKey" column="G_KEY"/>
        <result property="goodsName" column="goodsName"/>
        <result property="lectureDate" column="lectureDate"/>
        <result property="priceKey" column="PRICE_KEY"/>
        <result property="sellPrice" column="SELL_PRICE"/>
        <result property="month" column="month"/>
        <result property="kind" column="kind"/>
    </resultMap>

    <resultMap id="teacherHomeLectureMap" type="TeacherHomeLectureVO">
        <result property="stepCtgKey" column="STEP_CTG_KEY"/>
        <result property="ctgName" column="CTG_NAME"/>
        <collection property="teacherLectureList" javaType="java.util.ArrayList" resultMap="teacherLectureListMap"/>
    </resultMap>
    <resultMap id="teacherLectureListMap" type="TeacherHomeLectureListVO">
        <result property="gKey" column="G_KEY"/>
        <result property="lecKey" column="LEC_KEY"/>
        <result property="goodsName" column="goodsName"/>
        <result property="price" column="PRICE"/>
        <result property="sellPrice" column="SELL_PRICE"/>
        <result property="lecCount" column="lecCount"/>
        <result property="limitDay" column="LIMIT_DAY"/>
        <result property="lowVideo" column="lowVideo"/>
        <result property="highVideo" column="highVideo"/>
        <result property="curriKey" column="curriKey"/>
        <result property="imageTeacherList" column="IMAGE_TEACHER_LIST"/>
    </resultMap>

    <resultMap id="zianPassProductMap" type="com.zianedu.api.dto.ZianPassProductDTO">
        <result property="affiliationCtgKey" column="AFFILIATION_CTG_KEY"/>
        <result property="affiliationName" column="AFFILIATION_NAME"/>
        <collection property="zianPassProductList" javaType="java.util.ArrayList" resultMap="zianPassProductListMap"/>
    </resultMap>
    <resultMap id="zianPassProductListMap" type="ZianPassProductListVO">
        <result property="gKey" column="G_KEY"/>
        <result property="priceKey" column="PRICE_KEY"/>
        <result property="name" column="NAME"/>
        <result property="sellPrice" column="sellPrice"/>
        <result property="type" column="type"/>
        <result property="pmType" column="pmType"/>
        <result property="term" column="term"/>
    </resultMap>

    <select id="selectAcademySignUp" resultType="AcademySignUpVO">
        SELECT
            ( SELECT Z.name FROM t_category Z WHERE Z.ctg_key = D.step_ctg_key ) as ctgName,
            C.NAME,
            TO_CHAR(D.STARTDATE, 'YYYY-MM-DD') as startDate,
            TO_CHAR((D.STARTDATE + D.LIMIT_DAY), 'YYYY-MM-DD') as endDate
        FROM T_ORDER_GOODS A
        INNER JOIN T_ORDER B
        ON A.J_KEY = B.J_KEY
        INNER JOIN T_GOODS C
        ON A.G_KEY = C.G_KEY
        INNER JOIN t_lec D
        ON C.G_KEY = D.G_KEY
        WHERE 1=1
        AND A.USER_KEY = #{userKey}
        AND A.TYPE = 2
        AND B.PAY_STATUS = 2
        ORDER BY B.J_KEY asc
    </select>

    <select id="selectPromotionOnlineSignUp" resultMap="promotionOnlineSignUpMap">
        SELECT
            B.J_KEY,
            A.J_G_KEY,
            A.G_KEY,
            TO_CHAR(B.PAY_DATE, 'YYYY-MM-DD') as startDate,
            TO_CHAR((B.PAY_DATE + 366), 'YYYY-MM-DD') as endDate,
            D.step_ctg_key,
            ( SELECT Z.name FROM t_category Z WHERE Z.ctg_key = D.step_ctg_key ) as ctgName,
            C.NAME,
            A.KIND,
            E.J_LEC_KEY
        FROM T_ORDER_GOODS A
        INNER JOIN T_ORDER B
        ON A.J_KEY = B.J_KEY
        INNER JOIN T_GOODS C
        ON A.G_KEY = C.G_KEY
        INNER JOIN T_LEC D
        ON C.G_KEY = D.G_KEY
        INNER JOIN T_ORDER_LEC E
        ON A.J_G_KEY = E.J_G_KEY
        WHERE 1=1
        AND A.J_KEY IN (
                SELECT A.J_KEY
                FROM T_ORDER A
                INNER JOIN T_ORDER_GOODS B
                ON A.J_KEY = B.J_KEY
                INNER JOIN T_ORDER_PROMOTION C
                ON B.J_G_KEY = C.J_G_KEY
                INNER JOIN T_GOODS D
                ON B.G_KEY = D.G_KEY
                WHERE A.USER_KEY = #{userKey}
                AND A.PAY_STATUS = 2
        )
        <if test="deviceType != '' and deviceType != null">
            <if test="deviceType == 'PC'">
                AND A.KIND IN (100, 102)
            </if>
            <if test="deviceType == 'MOBILE'">
                AND A.KIND IN (101, 102)
            </if>
        </if>
        ORDER BY D.STEP_CTG_KEY ASC
    </select>

    <select id="selectOnlineLectureProgressRate" resultType="Integer">
        SELECT (SUM(T.REMAIN_TIME) / (SUM(T.VOD_TIME)  * 0.01) ) as progressRate
        FROM (
            SELECT
                Z.CURRI_KEY, Z.NAME, Z.VOD_TIME,
                NVL((SELECT J_CURRI_KEY FROM T_ORDER_LEC_CURRI WHERE CURRI_KEY = Z.CURRI_KEY AND J_LEC_KEY = #{jLecKey}), 0) as J_CURRI_KEY,
                NVL((SELECT TIME FROM T_ORDER_LEC_CURRI WHERE CURRI_KEY = Z.CURRI_KEY AND J_LEC_KEY = #{jLecKey}), 0) as REMAIN_TIME
            FROM T_LEC_CURRI Z
            WHERE Z.LEC_KEY = (
                SELECT C.LEC_KEY
                FROM T_ORDER_LEC A
                INNER JOIN T_ORDER_GOODS B
                ON A.J_G_KEY = B.J_G_KEY
                INNER JOIN T_LEC C
                ON B.G_KEY = C.G_KEY
                WHERE A.J_LEC_KEY = #{jLecKey}
            )
        ) T
    </select>

    <select id="selectVideoOnlineSignUp" resultMap="promotionOnlineSignUpMap">
        SELECT
            B.J_KEY,
            A.J_G_KEY,
            A.G_KEY,
            TO_CHAR(E.start_dt, 'YYYY.MM.DD') as startDate,
            TO_CHAR((E.start_dt + E.limit_day), 'YYYY.MM.DD') as endDate,
            ( SELECT Z.CTG_KEY FROM t_category Z WHERE Z.ctg_key = D.step_ctg_key ) as ctgKey,
            ( SELECT Z.name FROM t_category Z WHERE Z.ctg_key = D.step_ctg_key ) as ctgName,
            D.SUBJECT_CTG_KEY,
            C.NAME,
            A.KIND,
            E.J_LEC_KEY,
            E.PAUSE_CNT,
            E.LIMIT_DAY
        FROM T_ORDER_GOODS A
        INNER JOIN T_ORDER B
        ON A.J_KEY = B.J_KEY
        INNER JOIN T_GOODS C
        ON A.G_KEY = C.G_KEY
        INNER JOIN T_LEC D
        ON C.G_KEY = D.G_KEY
        INNER JOIN T_ORDER_LEC E
        ON A.J_G_KEY = E.J_G_KEY
        WHERE 1=1
        AND B.user_key = #{userKey}
        AND B.pay_status = 2
        AND A.j_pm_key = 0
        AND E.PAUSE_DAY = 0
        <if test="subjectCtgKey > 0">
            AND D.subject_ctg_key = #{subjectCtgKey}
        </if>
        <if test="stepCtgKey > 0">
            AND D.step_ctg_key = #{stepCtgKey}
        </if>
        <![CDATA[
            --AND TO_CHAR(E.start_dt, 'YYYY-MM-DD') <= TO_CHAR(sysdate, 'YYYY-MM-DD')
            AND E.start_dt <= TO_CHAR(sysdate, 'YYYY-MM-DD')
        ]]>
        <![CDATA[
            --AND TO_CHAR( (E.start_dt + E.limit_day), 'YYYY-MM-DD') >= TO_CHAR(sysdate, 'YYYY-MM-DD')
            AND (E.start_dt + E.limit_day) >= TO_CHAR(sysdate, 'YYYY-MM-DD')
        ]]>
        <if test="deviceType != '' and deviceType != null">
            <if test="deviceType == 'PC'">
                AND A.KIND IN (100, 102)
            </if>
            <if test="deviceType == 'MOBILE'">
                AND A.KIND IN (101, 102)
            </if>
        </if>
        ORDER BY A.STEP_CTG_KEY ASC
    </select>

    <select id="selectLectureDetailInfoByJLecKey" resultType="OnlineSubjectListVO">
        SELECT
            B.J_KEY,
            A.J_G_KEY,
            A.G_KEY,
            TO_CHAR(E.start_dt, 'YYYY.MM.DD') as startDate,
            TO_CHAR((E.start_dt + E.limit_day), 'YYYY.MM.DD') as endDate,
            ( SELECT Z.CTG_KEY FROM t_category Z WHERE Z.ctg_key = D.step_ctg_key ) as ctgKey,
            ( SELECT Z.name FROM t_category Z WHERE Z.ctg_key = D.step_ctg_key ) as ctgName,
            D.SUBJECT_CTG_KEY,
            C.NAME,
            A.KIND,
            E.J_LEC_KEY,
            E.PAUSE_CNT,
            E.LIMIT_DAY,
            DECODE(E.PAUSE_START_DT, '', '0','1') as isPause
        FROM T_ORDER_GOODS A
        INNER JOIN T_ORDER B
        ON A.J_KEY = B.J_KEY
        INNER JOIN T_GOODS C
        ON A.G_KEY = C.G_KEY
        INNER JOIN T_LEC D
        ON C.G_KEY = D.G_KEY
        INNER JOIN T_ORDER_LEC E
        ON A.J_G_KEY = E.J_G_KEY
        WHERE 1=1
        AND E.J_LEC_KEY = #{jLecKey}
    </select>

    <select id="selectOnlineLectureDetailInfo" resultType="OnlineLectureDetailVO">
        SELECT
            B.J_KEY,
            A.J_G_KEY,
            A.G_KEY,
            CONCAT( CONCAT( TO_CHAR(E.start_dt, 'YYYY-MM-DD'), ' ~ '),  TO_CHAR((E.start_dt + E.limit_day), 'YYYY-MM-DD')) as lectureDate,
            (SELECT COUNT(*) FROM t_lec_curri WHERE t_lec_curri.lec_key = D.lec_key) as lectureCnt,
            E.status,
            H.NAME as teacherName,
            C.NAME as lectureName,
            G.image_teacher_list,
            C.description,
            E.J_LEC_KEY
        FROM T_ORDER_GOODS A
        INNER JOIN T_ORDER B
        ON A.J_KEY = B.J_KEY
        INNER JOIN T_GOODS C
        ON A.G_KEY = C.G_KEY
        INNER JOIN T_LEC D
        ON C.G_KEY = D.G_KEY
        INNER JOIN T_ORDER_LEC E
        ON A.J_G_KEY = E.J_G_KEY
        INNER JOIN T_GOODS_TEACHER_LINK F
        ON C.g_key = F.G_KEY
        INNER JOIN T_TEACHER G
        ON F.TEACHER_KEY = G.TEACHER_KEY
        INNER JOIN T_USER H
        ON G.USER_KEY = H.USER_KEY
        WHERE 1=1
        AND E.j_lec_key = #{jLecKey}
    </select>

    <select id="selectOnlineLectureSubjectList" resultType="OnlineLectureSubjectListVO">
        SELECT T.*, (T.REMAIN_TIME / (T.VOD_TIME  * 0.01)) as progressRate
        FROM (
            SELECT
                Z.CURRI_KEY, Z.NAME, Z.VOD_TIME, Z.DATA_FILE, Z.VOD_FILE_HIGH, Z.VOD_FILE_LOW, Z.VOD_FILE_MOBILE_HIGH, Z.VOD_FILE_MOBILE_LOW,
                NVL((SELECT J_CURRI_KEY FROM T_ORDER_LEC_CURRI WHERE CURRI_KEY = Z.CURRI_KEY AND J_LEC_KEY = #{jLecKey}), 0) as J_CURRI_KEY,
                NVL((SELECT TIME FROM T_ORDER_LEC_CURRI WHERE CURRI_KEY = Z.CURRI_KEY AND J_LEC_KEY = #{jLecKey}), 0) as REMAIN_TIME
            FROM T_LEC_CURRI Z
            WHERE Z.LEC_KEY = (
                SELECT C.LEC_KEY
                FROM T_ORDER_LEC A
                INNER JOIN T_ORDER_GOODS B
                ON A.J_G_KEY = B.J_G_KEY
                INNER JOIN T_LEC C
                ON B.G_KEY = C.G_KEY
                WHERE A.J_LEC_KEY = #{jLecKey}
            )
            AND Z.IS_SHOW = 1
            ORDER BY Z.CURRI_KEY ASC
        ) T
    </select>

    <select id="selectGoodsReviewList" resultType="TGoodsReviewVO">
        SELECT
            G_REVIEW_KEY,
            TO_CHAR(INDATE, 'YYYY-MM-DD') as indate,
            TITLE, CONTENTS, POINT
            FROM T_GOODS_REVIEW
        WHERE G_KEY = (
                SELECT C.G_KEY
                FROM T_ORDER_LEC A
                INNER JOIN T_ORDER_GOODS B
                ON A.J_G_KEY = B.J_G_KEY
                INNER JOIN T_GOODS C
                ON B.G_KEY = C.G_KEY
                WHERE A.J_LEC_KEY = #{jLecKey}
        )
        ORDER BY G_REVIEW_KEY DESC
        OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectGoodsReviewListCount" resultType="Integer">
        SELECT COUNT ( G_REVIEW_KEY )
        FROM T_GOODS_REVIEW
        WHERE G_KEY = (
                SELECT C.G_KEY
                FROM T_ORDER_LEC A
                INNER JOIN T_ORDER_GOODS B
                ON A.J_G_KEY = B.J_G_KEY
                INNER JOIN T_GOODS C
                ON B.G_KEY = C.G_KEY
                WHERE A.J_LEC_KEY = #{jLecKey}
        )
    </select>

    <select id="selectVideoPauseRequestPopup" resultType="VideoPausePopupVO">
        SELECT A.J_LEC_KEY, C.NAME,
               TO_CHAR(A.START_DT, 'YYYY-MM-DD') as startDt,
               TO_CHAR((A.START_DT + A.LIMIT_DAY), 'YYYY-MM-DD') as end_dt
        FROM T_ORDER_LEC A
        INNER JOIN T_ORDER_GOODS B
        ON A.J_G_KEY = B.J_G_KEY
        INNER JOIN T_GOODS C
        ON B.G_KEY = C.G_KEY
        WHERE J_LEC_KEY = #{jLecKey}
    </select>

    <select id="selectTOrderLecPauseCnt" resultType="Integer">
        SELECT PAUSE_CNT FROM T_ORDER_LEC WHERE J_LEC_KEY = #{jLecKey}
    </select>

    <select id="selectVideoOnlinePauseList" resultType="OnlineVideoPauseVO">
        SELECT
            B.J_KEY,
            A.J_G_KEY,
            A.G_KEY,
            TO_CHAR(E.start_dt, 'YYYY-MM-DD') as startDate,
            TO_CHAR((E.start_dt + E.limit_day), 'YYYY-MM-DD') as endDate,
            TO_CHAR(E.PAUSE_START_DT, 'YYYY-MM-DD') as stopStartDate,
            TO_CHAR((E.PAUSE_START_DT + E.PAUSE_DAY), 'YYYY-MM-DD') as stopEndDate,
            ( SELECT Z.name FROM t_category Z WHERE Z.ctg_key = D.step_ctg_key ) as ctgName,
            C.NAME,
            A.KIND,
            E.J_LEC_KEY,
            E.PAUSE_CNT,
            E.PAUSE_DAY
        FROM T_ORDER_GOODS A
        INNER JOIN T_ORDER B
        ON A.J_KEY = B.J_KEY
        INNER JOIN T_GOODS C
        ON A.G_KEY = C.G_KEY
        INNER JOIN T_LEC D
        ON C.G_KEY = D.G_KEY
        INNER JOIN T_ORDER_LEC E
        ON A.J_G_KEY = E.J_G_KEY
        WHERE 1=1
        AND B.user_key = #{userKey}
        AND B.pay_status = 2
        AND A.j_pm_key = 0
        AND E.PAUSE_DAY > 0
        <![CDATA[
            AND TO_CHAR(E.start_dt, 'YYYY-MM-DD') <= TO_CHAR(sysdate, 'YYYY-MM-DD')
        ]]>
        <![CDATA[
            AND TO_CHAR( (E.start_dt + E.limit_day), 'YYYY-MM-DD') >= TO_CHAR(sysdate, 'YYYY-MM-DD')
        ]]>
        ORDER BY A.STEP_CTG_KEY ASC
    </select>

    <select id="selectVideoOnlinePauseListByJLecKey" resultType="OnlineVideoPauseVO">
        SELECT
            B.J_KEY,
            A.J_G_KEY,
            A.G_KEY,
            CONCAT( CONCAT( TO_CHAR(E.start_dt, 'YYYY.MM.DD'), ' ~ '),  TO_CHAR((E.start_dt + E.limit_day), 'YYYY.MM.DD')) as lectureDate,
            CONCAT( CONCAT( TO_CHAR(E.start_dt, 'YYYY.MM.DD'), ' ~ '),  TO_CHAR((E.start_dt + E.limit_day + E.PAUSE_DAY), 'YYYY.MM.DD')) as changeLectureDate,
            TO_CHAR(E.start_dt, 'YYYY.MM.DD') as startDate,
            TO_CHAR((E.start_dt + E.limit_day), 'YYYY-MM-DD') as endDate,
            TO_CHAR(E.PAUSE_START_DT, 'YYYY-MM-DD') as stopStartDate,
            TO_CHAR((E.PAUSE_START_DT + E.PAUSE_DAY), 'YYYY-MM-DD') as stopEndDate,
            ( SELECT Z.name FROM t_category Z WHERE Z.ctg_key = D.step_ctg_key ) as ctgName,
            C.NAME,
            A.KIND,
            E.J_LEC_KEY,
            E.PAUSE_CNT,
            E.PAUSE_DAY,
            B.USER_KEY,
            E.LIMIT_DAY,
            (E.LIMIT_DAY + E.PAUSE_DAY) as changeLimitDay
        FROM T_ORDER_GOODS A
        INNER JOIN T_ORDER B
        ON A.J_KEY = B.J_KEY
        INNER JOIN T_GOODS C
        ON A.G_KEY = C.G_KEY
        INNER JOIN T_LEC D
        ON C.G_KEY = D.G_KEY
        INNER JOIN T_ORDER_LEC E
        ON A.J_G_KEY = E.J_G_KEY
        WHERE 1=1
        AND E.J_LEC_KEY = #{jLecKey}
    </select>

    <select id="selectVideoOnlineEndList" resultType="OnlineVideoEndVO">
        SELECT
            B.J_KEY,
            A.J_G_KEY,
            A.G_KEY,
            E.LIMIT_DAY,
            E.PAUSE_TOTAL_DAY,
            TO_CHAR(E.START_DT, 'YYYY-MM-DD') as startDate,
            TO_CHAR((E.START_DT + E.LIMIT_DAY + E.PAUSE_TOTAL_DAY), 'YYYY-MM-DD') as endDate,
            ( SELECT Z.NAME FROM T_CATEGORY Z WHERE Z.CTG_KEY = D.STEP_CTG_KEY ) as ctgName,
            C.NAME,
            A.KIND,
            E.J_LEC_KEY,
            E.PAUSE_CNT,
            E.PAUSE_DAY,
            A.EXTEND_DAY,
            A.J_PM_KEY
        FROM T_ORDER_GOODS A
        INNER JOIN T_ORDER B
        ON A.J_KEY = B.J_KEY
        INNER JOIN T_GOODS C
        ON A.G_KEY = C.G_KEY
        INNER JOIN T_LEC D
        ON C.G_KEY = D.G_KEY
        INNER JOIN T_ORDER_LEC E
        ON A.J_G_KEY = E.J_G_KEY
        WHERE 1=1
        AND B.USER_KEY = #{userKey}
        AND E.J_LEC_KEY =
        AND B.PAY_TYPE NOT IN (20)
        AND B.PAY_STATUS = 2
        AND E.STATUS = 3
        ORDER BY A.J_G_KEY ASC
    </select>

    <select id="selectVideoSubjectCount" resultType="Integer">
        SELECT COUNT(A.LEC_KEY)
        FROM T_LEC_CURRI A
        INNER JOIN T_LEC B
        ON A.LEC_KEY = B.LEC_KEY
        WHERE G_KEY = #{gKey}
    </select>

    <select id="selectTopCalcPrice" resultType="CalcPriceVO">
        SELECT T.* FROM (
            SELECT  PRICE, SELL_PRICE, (PRICE - SELL_PRICE) as calcPrice
            FROM T_GOODS_PRICE_OPTION WHERE G_KEY = #{gKey}
            ORDER BY calcPrice DESC
        )T
        WHERE ROWNUM = 1
    </select>

    <select id="selectGoodsPriceOptionList" resultType="TGoodsPriceOptionVO">
        SELECT * FROM T_GOODS_PRICE_OPTION WHERE G_KEY = #{gKey}
    </select>

    <select id="selectGoodsPriceOptionList2" resultType="TGoodsPriceOptionVO">
        SELECT T.*,
               TRIM( TO_CHAR(SELL_PRICE, '999,999,999,999,999') ) as sellPriceName,
               TRIM( TO_CHAR(PRICE, '999,999,999,999,999') ) as priceName
        FROM (
            SELECT * FROM T_GOODS_PRICE_OPTION WHERE G_KEY = #{gKey}
        )T
    </select>

    <select id="selectTeacherBookListFromVideoLectureLink" resultType="LectureBookVO">
        SELECT
            A.LINK_KEY, C.G_KEY, B.BOOK_KEY, B.WRITER, C.NAME as bookName, TO_CHAR(B.PUBLISH_DATE, 'YYYY.MM.DD') as publishDate,
            TRIM( TO_CHAR(D.SELL_PRICE, '999,999,999,999,999') ) as sellPriceName,
            TRIM( TO_CHAR(D.PRICE, '999,999,999,999,999') ) as priceName,
            D.SELL_PRICE,
            D.PRICE,
            C.IMAGE_VIEW, C.IMAGE_LIST,
            A.VALUE_BIT, D.PRICE_KEY, CASE A.VALUE_BIT WHEN '1' THEN '주교재' WHEN '0' THEN '부교재' END as isMain
        FROM T_LINK_KEY A
        INNER JOIN T_BOOK B
        ON A.RES_KEY = B.G_KEY
        INNER JOIN T_GOODS C
        ON B.G_KEY = C.G_KEY
        INNER JOIN T_GOODS_PRICE_OPTION D
        ON C.G_KEY = D.G_KEY
        WHERE A.RES_TYPE = 5
        AND A.REQ_KEY = #{gKey}
    </select>

    <select id="selectTeacherAcademyLectureBookList" resultType="LectureBookVO">
        SELECT
            A.LINK_KEY, C.G_KEY, B.NAME as bookName,
            TRIM( TO_CHAR(C.SELL_PRICE, '999,999,999,999,999') ) as sellPriceName,
            TRIM( TO_CHAR(C.PRICE, '999,999,999,999,999') ) as priceName,
            C.SELL_PRICE,
            C.PRICE,
            B.IMAGE_VIEW, B.IMAGE_LIST,
            A.VALUE_BIT, C.PRICE_KEY, CASE A.VALUE_BIT WHEN '1' THEN '주교재' WHEN '0' THEN '부교재' END as isMain,
            D.BOOK_KEY, D.WRITER, TO_CHAR(D.PUBLISH_DATE, 'YYYY.MM.DD') as publishDate
        FROM T_LINK_KEY A
        INNER JOIN T_GOODS B
        ON A.RES_KEY = B.G_KEY
        INNER JOIN T_GOODS_PRICE_OPTION C
        ON B.G_KEY = C.G_KEY
        LEFT OUTER JOIN T_BOOK D
        ON A.RES_KEY = D.G_KEY
        WHERE A.RES_TYPE = 5
        AND A.REQ_KEY = #{gKey}
    </select>

    <select id="selectOnlineVideoLectureDetailInfo" resultType="VideoLectureDetailVO">
        SELECT A.G_KEY, A.NAME as goodsName, B.STATUS, B.LIMIT_DAY,
                (SELECT COUNT(Z.LEC_KEY) FROM T_LEC_CURRI Z WHERE Z.LEC_KEY = B.LEC_KEY) as lectureCount,
                (
                    SELECT TRIM ( TO_CHAR(POINT, '999,999') ) as point
                    FROM (
                        SELECT POINT
                        FROM ZIANEDU.T_GOODS_PRICE_OPTION
                        WHERE G_KEY = #{gKey}
                        ORDER BY POINT DESC
                    )
                    WHERE ROWNUM = 1
                ) as point,
                (
                    SELECT  CEIL( (SUM(POINT) / COUNT(G_REVIEW_KEY)) )
                    FROM T_GOODS_REVIEW
                    WHERE G_KEY = #{gKey}
                )as evaluationPoint,
                (
                   SELECT * FROM (
                        SELECT T.VOD_FILE_LOW
                        FROM T_LEC_CURRI T
                        WHERE T.LEC_KEY = B.LEC_KEY
                        ORDER BY T.CURRI_KEY ASC
                    ) WHERE ROWNUM = 1
                ) as lowVideo,
                (
                   SELECT * FROM (
                        SELECT T.VOD_FILE_HIGH
                        FROM T_LEC_CURRI T
                        WHERE T.LEC_KEY = B.LEC_KEY
                        ORDER BY T.CURRI_KEY ASC
                    ) WHERE ROWNUM = 1
                ) as highVideo,
                 (
                   SELECT * FROM (
                        SELECT T.CURRI_KEY
                        FROM T_LEC_CURRI T
                        WHERE T.LEC_KEY = B.LEC_KEY
                        ORDER BY T.CURRI_KEY ASC
                    ) WHERE ROWNUM = 1
                ) as curriKey,
                D.IMAGE_TEACHER_LIST, E.NAME as teacherName,
                A.DESCRIPTION
        FROM T_GOODS A
        INNER JOIN T_LEC B
        ON A.G_KEY = B.G_KEY
        INNER JOIN T_GOODS_TEACHER_LINK C
        ON A.G_KEY = C.G_KEY
        INNER JOIN T_TEACHER D
        ON C.TEACHER_KEY = D.TEACHER_KEY
        INNER JOIN T_USER E
        ON D.USER_KEY = E.USER_KEY
        WHERE A.TYPE = 1
        AND A.G_KEY = #{gKey}
    </select>

    <select id="selectGoodsPriceOption" resultType="TGoodsPriceOptionVO">
        SELECT * FROM T_GOODS_PRICE_OPTION WHERE G_KEY = #{gKey}
    </select>

    <select id="selectLectureListFromVideoProduct" resultType="TLecCurriVO">
        SELECT ROW_NUMBER() OVER(ORDER BY T.CURRI_KEY) NUM, T.*
        FROM (
            SELECT
            ROW_NUMBER() OVER(ORDER BY A.CURRI_KEY) NUM, A.NAME,
            A.CURRI_KEY,
            A.LEC_KEY,
            <if test="device == 1">
                CONCAT('http://zianedu.star.skcdn.com/', A.VOD_FILE_LOW)  as vodFileLow,
                CONCAT('http://zianedu.star.skcdn.com/', A.VOD_FILE_HIGH) as vodFileHigh,
            </if>
            <if test="device == 3">
                CONCAT('http://zianedu.star.skcdn.com/', A.VOD_FILE_MOBILE_LOW)  as vodFileLow,
                CONCAT('http://zianedu.star.skcdn.com/', A.VOD_FILE_MOBILE_HIGH) as vodFileHigh,
            </if>
            A.VOD_TIME,
            A.DATA_FILE
            FROM T_LEC_CURRI A
            INNER JOIN T_LEC B
            ON A.LEC_KEY = B.LEC_KEY
            INNER JOIN T_GOODS C
            ON B.G_KEY = C.G_KEY
            WHERE C.G_KEY = #{gKey}
            ORDER BY NUM ASC
        )T
    </select>

    <select id="selectLectureListFromVideoProductCount" resultType="int">
        SELECT COUNT (A.LEC_KEY) as cnt
        FROM T_LEC_CURRI A
        INNER JOIN T_LEC B
        ON A.LEC_KEY = B.LEC_KEY
        INNER JOIN T_GOODS C
        ON B.G_KEY = C.G_KEY
        WHERE C.G_KEY = #{gKey}
    </select>

    <select id="selectAcademyLectureDetailInfo" resultType="AcademyLectureDetailVO">
        SELECT
            A.G_KEY, A.NAME as goodsName,
           TRIM( TO_CHAR(C.POINT, '999,999,999,999,999') ) as point,
           TRIM( TO_CHAR(C.SELL_PRICE, '999,999,999,999,999') ) as sellPriceName,
           TRIM( TO_CHAR(C.PRICE, '999,999,999,999,999') ) as priceName,
           C.SELL_PRICE,
           C.PRICE,
           CONCAT( CONCAT( TO_CHAR(B.STARTDATE, 'YYYY.MM.DD'), ' ~ '),  TO_CHAR((B.STARTDATE + B.LIMIT_DAY), 'YYYY.MM.DD')) as lectureDate,
           CONCAT( C.KIND, '개월') as month,
           A.IMAGE_VIEW,
           B.LIMIT_DAY,
           ( SELECT Z.CTG_KEY FROM t_category Z WHERE Z.ctg_key = B.step_ctg_key ) as ctgKey,
           ( SELECT Z.name FROM t_category Z WHERE Z.ctg_key = B.step_ctg_key ) as ctgName
        FROM T_GOODS A
        INNER JOIN T_LEC B
        ON A.G_KEY = B.G_KEY
        INNER JOIN T_GOODS_PRICE_OPTION C
        ON A.G_KEY = C.G_KEY
        WHERE A.TYPE = 2
        AND A.G_KEY = #{gKey}
    </select>

    <select id="selectAcademyLectureTeacherList" resultType="TeacherInfoVO">
        SELECT C.NAME as teacherName, B.IMAGE_LIST as teacherImage
        FROM T_GOODS_TEACHER_LINK A
        INNER JOIN T_TEACHER B
        ON A.TEACHER_KEY = B.TEACHER_KEY
        INNER JOIN T_USER C
        ON B.USER_KEY = C.USER_KEY
        WHERE G_KEY = #{gKey}
        ORDER BY A.G_TEACHER_KEY ASC
    </select>

    <select id="selectAcademyLectureListFromCategoryMenu" resultMap="academyLectureListMap">
        SELECT Z.*
        FROM (
                SELECT C.STEP_CTG_KEY as stepCtgKey, B.G_KEY,  D.NAME as ctgName, B.NAME as goodsName,
                        CONCAT( CONCAT( TO_CHAR(C.STARTDATE, 'YYYY-MM-DD'), ' ~ '),  TO_CHAR(C.STARTDATE + C.LIMIT_DAY, 'YYYY-MM-DD')) as lectureDate,
                        E.PRICE_KEY, TRIM ( TO_CHAR(E.SELL_PRICE, '999,999') ) as sellPrice,
                        CONCAT( E.KIND, '개월') as month,
                        E.KIND
                FROM T_CATEGORY_GOODS A
                INNER JOIN T_GOODS B
                ON A.G_KEY = B.G_KEY
                INNER JOIN T_LEC C
                ON B.G_KEY = C.G_KEY
                INNER JOIN T_CATEGORY D
                ON C.STEP_CTG_KEY = D.CTG_KEY
                INNER JOIN T_GOODS_PRICE_OPTION E
                ON B.G_KEY = E.G_KEY
                WHERE 1=1
                AND B.TYPE = 2
                AND B.IS_SHOW = 1
                AND B.IS_SELL = 1
                AND A.CTG_KEY = #{ctgKey}
                ORDER BY  C.STEP_CTG_KEY ASC, B.G_KEY ASC
            ) Z
            WHERE 1=1
            <if test="stepCtgKey > 0">
                AND Z.STEP_CTG_KEY = #{stepCtgKey}
            </if>
            <if test="teacherKey > 0">
                AND Z.G_KEY IN ( SELECT G_KEY FROM T_GOODS_TEACHER_LINK WHERE TEACHER_KEY = #{teacherKey} )
            </if>
    </select>

    <select id="selectAcademyLectureListFromCategoryMenuAtLectureApply" resultType="LectureApplyAcademyListVO">
        SELECT ZZ.stepCtgKey, ZZ.CTG_KEY, ZZ.SUBJECT_CTG_KEY, ZZ.goodsName, ZZ.g_key, ZZ.ctgName, ZZ.lectureDate, ZZ.sellPrice,
               ZZ.PRICE_KEY, ZZ.month, ZZ.kind, ZZ.CTG_KEY, ZZ.subjectName, ZZ.IMAGE_VIEW, ZZ.EMPHASIS , ZZ.PRICE, ZZ.sellPrice2
        FROM (
        SELECT Z.*
        FROM (
                SELECT C.STEP_CTG_KEY as stepCtgKey, B.G_KEY,  D.NAME as ctgName, B.NAME as goodsName,
                        CONCAT( CONCAT( TO_CHAR(C.STARTDATE, 'YYYY.MM.DD'), ' ~ '),  TO_CHAR(C.STARTDATE + C.LIMIT_DAY, 'YYYY.MM.DD')) as lectureDate,
                        E.PRICE_KEY, TRIM ( TO_CHAR(E.SELL_PRICE, '999,999') ) as sellPrice,
                        CONCAT( E.KIND, '개월') as month,
                        E.KIND,
                        A.CTG_KEY,
                        (SELECT NAME FROM T_CATEGORY Z WHERE Z.CTG_KEY = A.CTG_KEY) as subjectName,
                        F.TEACHER_KEY,
                        B.IMAGE_VIEW,
                        C.SUBJECT_CTG_KEY,
                        B.EMPHASIS,
                        E.SELL_PRICE as sellPrice2,
                        E.PRICE
                FROM T_CATEGORY_GOODS A
                INNER JOIN T_GOODS B
                ON A.G_KEY = B.G_KEY
                INNER JOIN T_LEC C
                ON B.G_KEY = C.G_KEY
                INNER JOIN T_CATEGORY D
                ON C.STEP_CTG_KEY = D.CTG_KEY
                INNER JOIN T_GOODS_PRICE_OPTION E
                ON B.G_KEY = E.G_KEY
                LEFT OUTER JOIN T_GOODS_TEACHER_LINK F
                ON A.G_KEY = F.G_KEY
                WHERE 1=1
                AND B.TYPE = 2
                AND B.IS_SHOW = 1
                AND B.IS_SELL = 1
                AND A.CTG_KEY IN (
                     SELECT CTG_KEY FROM T_CATEGORY
                        WHERE PARENT_KEY = #{menuCtgKey}
                    )
                <if test="teacherKeys.size  != 0">
                    AND F.TEACHER_KEY IN
                    <foreach collection="teacherKeys" item="teacherKey" separator="," open="(" close=")">
                        #{teacherKey}
                    </foreach>
                </if>
                ORDER BY  C.STEP_CTG_KEY ASC, B.G_KEY ASC
            ) Z
            WHERE 1=1
            <if test="stepCtgKeys.size  != 0">
                AND Z.stepCtgKey IN
                <foreach collection="stepCtgKeys" item="stepCtgKey" separator="," open="(" close=")">
                    #{stepCtgKey}
                </foreach>
            </if>
    )ZZ
    GROUP BY ZZ.stepCtgKey, ZZ.CTG_KEY, ZZ.goodsName, ZZ.SUBJECT_CTG_KEY, ZZ.G_KEY, ZZ.ctgName, ZZ.lectureDate, ZZ.sellPrice, ZZ.PRICE_KEY,
             ZZ.month, ZZ.kind, ZZ.CTG_KEY, ZZ.subjectName, ZZ.IMAGE_VIEW, ZZ.EMPHASIS, ZZ.PRICE, ZZ.sellPrice2
    ORDER BY ZZ.stepCtgKey ASC
    </select>

    <select id="selectVideoLectureListFromCategoryMenu" resultMap="teacherHomeLectureMap">
        SELECT T.* FROM
        (
            SELECT
                    A.G_KEY, C.STEP_CTG_KEY,D.NAME as ctgName, B.EMPHASIS, B.NAME as goodsName,
                    (SELECT COUNT(LEC_KEY) FROM T_LEC_CURRI Z WHERE Z.LEC_KEY = C.LEC_KEY) as lecCount, C.LIMIT_DAY, F.IMAGE_TEACHER_LIST,
                     (
                       SELECT * FROM (
                            SELECT T.VOD_FILE_LOW
                            FROM T_LEC_CURRI T
                            WHERE T.LEC_KEY = C.LEC_KEY
                            ORDER BY T.CURRI_KEY ASC
                        ) WHERE ROWNUM = 1
                    ) as lowVideo,
                    (
                       SELECT * FROM (
                            SELECT T.VOD_FILE_HIGH
                            FROM T_LEC_CURRI T
                            WHERE T.LEC_KEY = C.LEC_KEY
                            ORDER BY T.CURRI_KEY ASC
                        ) WHERE ROWNUM = 1
                    ) as highVideo,
                     (
                       SELECT * FROM (
                            SELECT T.CURRI_KEY
                            FROM T_LEC_CURRI T
                            WHERE T.LEC_KEY = C.LEC_KEY
                            ORDER BY T.CURRI_KEY ASC
                        ) WHERE ROWNUM = 1
                    ) as curriKey
            FROM T_CATEGORY_GOODS A
            INNER JOIN T_GOODS B
            ON A.G_KEY = B.G_KEY
            INNER JOIN T_LEC C
            ON A.G_KEY = C.G_KEY
            INNER JOIN T_CATEGORY D
            ON C.STEP_CTG_KEY = D.CTG_KEY
            INNER JOIN T_GOODS_TEACHER_LINK E
            ON A.G_KEY = E.G_KEY
            INNER JOIN T_TEACHER F
            ON E.TEACHER_KEY = F.TEACHER_KEY
            WHERE A.CTG_KEY = #{ctgKey}
            <if test="stepCtgKey > 0">
                AND C.STEP_CTG_KEY = #{stepCtgKey}
            </if>
            <if test="teacherKey > 0">
                AND F.TEACHER_KEY = #{teacherKey}
            </if>
            AND B.TYPE = 1
            AND B.IS_SHOW = 1
            AND B.IS_SELL =1
        )T
        ORDER BY T.STEP_CTG_KEY ASC, T.G_KEY ASC
    </select>

    <select id="selectVideoLectureListFromCategoryMenuFromApplyLecture" resultMap="teacherHomeLectureMap">
        SELECT T.* FROM
        (
            SELECT
            A.G_KEY, C.STEP_CTG_KEY,D.NAME as ctgName, B.EMPHASIS, B.NAME as goodsName,
            (SELECT COUNT(LEC_KEY) FROM T_LEC_CURRI Z WHERE Z.LEC_KEY = C.LEC_KEY) as lecCount, C.LIMIT_DAY, F.IMAGE_TEACHER_LIST,
            (
            SELECT * FROM (
            SELECT T.VOD_FILE_LOW
            FROM T_LEC_CURRI T
            WHERE T.LEC_KEY = C.LEC_KEY
            ORDER BY T.CURRI_KEY ASC
            ) WHERE ROWNUM = 1
            ) as lowVideo,
            (
            SELECT * FROM (
            SELECT T.VOD_FILE_HIGH
            FROM T_LEC_CURRI T
            WHERE T.LEC_KEY = C.LEC_KEY
            ORDER BY T.CURRI_KEY ASC
            ) WHERE ROWNUM = 1
            ) as highVideo,
            (
            SELECT * FROM (
            SELECT T.CURRI_KEY
            FROM T_LEC_CURRI T
            WHERE T.LEC_KEY = C.LEC_KEY
            ORDER BY T.CURRI_KEY ASC
            ) WHERE ROWNUM = 1
            ) as curriKey
        FROM T_CATEGORY_GOODS A
        INNER JOIN T_GOODS B
        ON A.G_KEY = B.G_KEY
        INNER JOIN T_LEC C
        ON A.G_KEY = C.G_KEY
        INNER JOIN T_CATEGORY D
        ON C.STEP_CTG_KEY = D.CTG_KEY
        INNER JOIN T_GOODS_TEACHER_LINK E
        ON A.G_KEY = E.G_KEY
        INNER JOIN T_TEACHER F
        ON E.TEACHER_KEY = F.TEACHER_KEY
        WHERE A.CTG_KEY = #{ctgKey}
        <if test="teacherKey > 0">
            AND F.TEACHER_KEY = #{teacherKey}
        </if>
        <if test="stepCtgKeys.size != 0">
            AND C.STEP_CTG_KEY IN
            <foreach collection="stepCtgKeys" item="stepCtgKey" separator="," open="(" close=")">
                #{stepCtgKey}
            </foreach>
        </if>
        AND B.TYPE = 1
        AND B.IS_SHOW = 1
        AND B.IS_SELL =1
        )T
        ORDER BY T.STEP_CTG_KEY ASC, T.G_KEY ASC
    </select>

    <select id="selectVideoLectureListFromCategoryMenuFromApplyLecture2" resultMap="teacherHomeLectureMap">
        SELECT T.* FROM
        (
            SELECT
            A.G_KEY, C.STEP_CTG_KEY,D.NAME as ctgName, B.EMPHASIS, B.NAME as goodsName,
            (SELECT COUNT(LEC_KEY) FROM T_LEC_CURRI Z WHERE Z.LEC_KEY = C.LEC_KEY) as lecCount, C.LIMIT_DAY, F.IMAGE_TEACHER_LIST,
            (
                SELECT * FROM (
                    SELECT T.VOD_FILE_LOW
                    FROM T_LEC_CURRI T
                    WHERE T.LEC_KEY = C.LEC_KEY
                    ORDER BY T.CURRI_KEY ASC
                ) WHERE ROWNUM = 1
            ) as lowVideo,
            (
                SELECT * FROM (
                    SELECT T.VOD_FILE_HIGH
                    FROM T_LEC_CURRI T
                    WHERE T.LEC_KEY = C.LEC_KEY
                    ORDER BY T.CURRI_KEY ASC
                ) WHERE ROWNUM = 1
            ) as highVideo,
            (
                SELECT * FROM (
                SELECT T.CURRI_KEY
                FROM T_LEC_CURRI T
                WHERE T.LEC_KEY = C.LEC_KEY
                ORDER BY T.CURRI_KEY ASC
                ) WHERE ROWNUM = 1
            ) as curriKey
            FROM T_CATEGORY_GOODS A
            INNER JOIN T_GOODS B
            ON A.G_KEY = B.G_KEY
            INNER JOIN T_LEC C
            ON A.G_KEY = C.G_KEY
            INNER JOIN T_CATEGORY D
            ON C.STEP_CTG_KEY = D.CTG_KEY
            INNER JOIN T_GOODS_TEACHER_LINK E
            ON A.G_KEY = E.G_KEY
            INNER JOIN T_TEACHER F
            ON E.TEACHER_KEY = F.TEACHER_KEY
            WHERE C.SUBJECT_CTG_KEY = #{ctgKey}
            AND A.CTG_KEY IN (
                SELECT CTG_KEY FROM T_CATEGORY
                WHERE PARENT_KEY = #{menuCtgKey}
            )
            <if test="teacherKey > 0">
                AND F.TEACHER_KEY = #{teacherKey}
            </if>
            <if test="stepCtgKeys.size != 0">
                AND C.STEP_CTG_KEY IN
                <foreach collection="stepCtgKeys" item="stepCtgKey" separator="," open="(" close=")">
                    #{stepCtgKey}
                </foreach>
            </if>
            AND B.TYPE = 1
            AND B.IS_SHOW = 1
            AND B.IS_SELL =1
        )T
        ORDER BY T.STEP_CTG_KEY ASC, T.G_KEY ASC
    </select>

    <select id="selectPromotionPackageList" resultType="SpecialPackageVO">
        SELECT A.CTG_G_KEY, B.G_KEY, B.NAME as goodsName, C.EXAM_YEAR, C.LIMIT_DAY
        FROM T_CATEGORY_GOODS A
        INNER JOIN T_GOODS B
        ON A.G_KEY = B.G_KEY
        INNER JOIN T_PROMOTION C
        ON A.G_KEY = C.G_KEY
        WHERE B.TYPE = 5
        AND B.IS_SHOW = 1
        AND B.IS_SELL =1
        AND A.CTG_KEY = #{menuCtgKey}
        <if test="teacherKeys.size  != 0">
            AND B.G_KEY IN
            (
                SELECT A.REQ_KEY
                FROM T_LINK_KEY A
                INNER JOIN T_GOODS B
                ON A.RES_KEY = B.G_KEY
                INNER JOIN T_LEC C
                ON B.G_KEY = C.G_KEY
                INNER JOIN T_CATEGORY D
                ON C.STEP_CTG_KEY = D.CTG_KEY
                INNER JOIN T_GOODS_TEACHER_LINK E
                ON B.G_KEY = E.G_KEY
                INNER JOIN T_TEACHER F
                ON E.TEACHER_KEY = F.TEACHER_KEY
                WHERE A.REQ_TYPE = 1
                AND A.RES_TYPE = 1
                AND A.REQ_KEY IN (
                    SELECT B.G_KEY
                    FROM T_CATEGORY_GOODS A
                    INNER JOIN T_GOODS B
                    ON A.G_KEY = B.G_KEY
                    INNER JOIN T_PROMOTION C
                    ON A.G_KEY = C.G_KEY
                    WHERE B.TYPE = 5
                    AND B.IS_SHOW = 1
                    AND B.IS_SELL =1
                    AND A.CTG_KEY = #{menuCtgKey}
                )
                AND F.TEACHER_KEY IN
                <foreach collection="teacherKeys" item="teacherKey" separator="," open="(" close=")">
                    #{teacherKey}
                </foreach>
            )
        </if>
        <if test="stepCtgKeys.size != 0">
            AND B.G_KEY IN
            (
                SELECT A.REQ_KEY
                FROM T_LINK_KEY A
                INNER JOIN T_GOODS B
                ON A.RES_KEY = B.G_KEY
                INNER JOIN T_LEC C
                ON B.G_KEY = C.G_KEY
                INNER JOIN T_CATEGORY D
                ON C.STEP_CTG_KEY = D.CTG_KEY
                INNER JOIN T_GOODS_TEACHER_LINK E
                ON B.G_KEY = E.G_KEY
                INNER JOIN T_TEACHER F
                ON E.TEACHER_KEY = F.TEACHER_KEY
                WHERE A.REQ_TYPE = 1
                AND A.RES_TYPE = 1
                AND A.REQ_KEY IN (
                    SELECT B.G_KEY
                    FROM T_CATEGORY_GOODS A
                    INNER JOIN T_GOODS B
                    ON A.G_KEY = B.G_KEY
                    INNER JOIN T_PROMOTION C
                    ON A.G_KEY = C.G_KEY
                    WHERE B.TYPE = 5
                    AND B.IS_SHOW = 1
                    AND B.IS_SELL =1
                    AND A.CTG_KEY = #{menuCtgKey}
                )
                AND C.STEP_CTG_KEY IN
                <foreach collection="stepCtgKeys" item="stepCtgKey" separator="," open="(" close=")">
                    #{stepCtgKey}
                </foreach>
            )
        </if>
        <if test="subjectCtgKeys.size != 0">
            AND B.G_KEY IN
            (
                SELECT A.REQ_KEY
                FROM T_LINK_KEY A
                INNER JOIN T_GOODS B
                ON A.RES_KEY = B.G_KEY
                INNER JOIN T_LEC C
                ON B.G_KEY = C.G_KEY
                INNER JOIN T_CATEGORY D
                ON C.STEP_CTG_KEY = D.CTG_KEY
                INNER JOIN T_GOODS_TEACHER_LINK E
                ON B.G_KEY = E.G_KEY
                INNER JOIN T_TEACHER F
                ON E.TEACHER_KEY = F.TEACHER_KEY
                WHERE A.REQ_TYPE = 1
                AND A.RES_TYPE = 1
                AND A.REQ_KEY IN (
                    SELECT B.G_KEY
                    FROM T_CATEGORY_GOODS A
                    INNER JOIN T_GOODS B
                    ON A.G_KEY = B.G_KEY
                    INNER JOIN T_PROMOTION C
                    ON A.G_KEY = C.G_KEY
                    WHERE B.TYPE = 5
                    AND B.IS_SHOW = 1
                    AND B.IS_SELL =1
                    AND A.CTG_KEY = #{menuCtgKey}
                )
                AND C.SUBJECT_CTG_KEY IN
                <foreach collection="subjectCtgKeys" item="subjectCtgKey" separator="," open="(" close=")">
                    #{subjectCtgKey}
                </foreach>
            )
        </if>
        ORDER BY B.G_KEY DESC
    </select>
    
    <select id="selectSpecialPackageIncludeProductList" resultType="SpecialPackageLectureVO">
        SELECT B.G_KEY, B.EMPHASIS, B.NAME, C.LIMIT_DAY, F.IMAGE_TEACHER_LIST as IMAGE_LIST,
                (SELECT NAME FROM T_CATEGORY Z WHERE Z.CTG_KEY = C.STEP_CTG_KEY) as stepName,
                (SELECT COUNT(Z.LEC_KEY) FROM T_LEC_CURRI Z WHERE Z.LEC_KEY = C.LEC_KEY) as lectureCount
        FROM T_LINK_KEY A
        INNER JOIN T_GOODS B
        ON A.RES_KEY = B.G_KEY
        INNER JOIN T_LEC C
        ON B.G_KEY = C.G_KEY
        INNER JOIN T_CATEGORY D
        ON C.STEP_CTG_KEY = D.CTG_KEY
        INNER JOIN T_GOODS_TEACHER_LINK E
        ON B.G_KEY = E.G_KEY
        INNER JOIN T_TEACHER F
        ON E.TEACHER_KEY = F.TEACHER_KEY
        WHERE 1=1
        AND A.REQ_KEY = #{gKey}
    </select>

    <select id="selectPromotionPackageDetailInfo" resultType="SpecialPackageProductVO">
        SELECT
            A.CTG_G_KEY,
            B.G_KEY,
            B.NAME as goodsName,
            C.EXAM_YEAR,
            C.LIMIT_DAY,
            (SELECT PRICE_KEY FROM T_GOODS_PRICE_OPTION Z WHERE Z.G_KEY = B.G_KEY AND Z.KIND = 100) as pcPriceKey,
            (SELECT PRICE FROM T_GOODS_PRICE_OPTION Z WHERE Z.G_KEY = B.G_KEY AND Z.KIND = 100) as pcPrice,
            (SELECT SELL_PRICE FROM T_GOODS_PRICE_OPTION Z WHERE Z.G_KEY = B.G_KEY AND Z.KIND = 100) as pcSellPrice,
            (SELECT PRICE_KEY FROM T_GOODS_PRICE_OPTION Z WHERE Z.G_KEY = B.G_KEY AND Z.KIND = 101) as mobilePriceKey,
            (SELECT PRICE FROM T_GOODS_PRICE_OPTION Z WHERE Z.G_KEY = B.G_KEY AND Z.KIND = 101) as mobilePrice,
            (SELECT SELL_PRICE FROM T_GOODS_PRICE_OPTION Z WHERE Z.G_KEY = B.G_KEY AND Z.KIND = 101) as mobileSellPrice,
            TRIM( (SELECT TO_CHAR(PRICE, '999,999,999,999,999') FROM T_GOODS_PRICE_OPTION Z WHERE Z.G_KEY = B.G_KEY AND Z.KIND = 100)) as pcPriceName,
            TRIM( (SELECT TO_CHAR(SELL_PRICE, '999,999,999,999,999') FROM T_GOODS_PRICE_OPTION Z WHERE Z.G_KEY = B.G_KEY AND Z.KIND = 100)) as pcSellPriceName,
            TRIM( (SELECT TO_CHAR(PRICE, '999,999,999,999,999') FROM T_GOODS_PRICE_OPTION Z WHERE Z.G_KEY = B.G_KEY AND Z.KIND = 101)) as mobilePriceName,
            TRIM( (SELECT TO_CHAR(SELL_PRICE, '999,999,999,999,999') FROM T_GOODS_PRICE_OPTION Z WHERE Z.G_KEY = B.G_KEY AND Z.KIND = 101)) as mobileSellPriceName,
            0 as point
        FROM T_CATEGORY_GOODS A
        INNER JOIN T_GOODS B
        ON A.G_KEY = B.G_KEY
        INNER JOIN T_PROMOTION C
        ON A.G_KEY = C.G_KEY
        WHERE B.TYPE = 5
        AND B.IS_SHOW = 1
        AND B.IS_SELL = 1
        AND B.G_KEY = #{gKey}
    </select>

    <select id="selectPromotionPackageTeacherList" resultMap="teacherHomeLectureMap">
        SELECT
            C.STEP_CTG_KEY, D.NAME as ctgName, B.G_KEY, B.EMPHASIS, B.NAME as goodsName, C.limit_day,
            (SELECT COUNT(LEC_KEY) FROM T_LEC_CURRI Z WHERE Z.LEC_KEY = C.LEC_KEY) as lecCount, F.IMAGE_TEACHER_LIST,
            (
               SELECT * FROM (
                    SELECT T.VOD_FILE_LOW
                    FROM T_LEC_CURRI T
                    WHERE T.LEC_KEY = C.LEC_KEY
                    ORDER BY T.CURRI_KEY ASC
                ) WHERE ROWNUM = 1
            ) as lowVideo,
            (
               SELECT * FROM (
                    SELECT T.VOD_FILE_HIGH
                    FROM T_LEC_CURRI T
                    WHERE T.LEC_KEY = C.LEC_KEY
                    ORDER BY T.CURRI_KEY ASC
                ) WHERE ROWNUM = 1
            ) as highVideo,
             (
               SELECT * FROM (
                    SELECT T.CURRI_KEY
                    FROM T_LEC_CURRI T
                    WHERE T.LEC_KEY = C.LEC_KEY
                    ORDER BY T.CURRI_KEY ASC
                ) WHERE ROWNUM = 1
            ) as curriKey
        FROM T_LINK_KEY A
        INNER JOIN T_GOODS B
        ON A.RES_KEY = B.G_KEY
        INNER JOIN T_LEC C
        ON B.G_KEY = C.G_KEY
        INNER JOIN T_CATEGORY D
        ON C.STEP_CTG_KEY = D.CTG_KEY
        INNER JOIN T_GOODS_TEACHER_LINK E
        ON B.G_KEY = E.G_KEY
        INNER JOIN T_TEACHER F
        ON E.TEACHER_KEY = F.TEACHER_KEY
        WHERE A.REQ_TYPE = 1
        AND A.RES_TYPE = 1
        AND A.REQ_KEY = #{gKey}
    </select>

    <select id="selectMockExamProductListCount" resultType="int">
        SELECT COUNT(T.G_KEY) FROM (
            SELECT
                (SELECT RES_TYPE FROM T_LINK_KEY TT WHERE A.G_KEY = TT.REQ_KEY) as onOffKey,
                A.G_KEY,
                (
                    SELECT TT.CLASS_CTG_KEY
                    FROM T_LINK_KEY T INNER JOIN T_EXAM_MASTER TT
                    ON T.RES_KEY = TT.EXAM_KEY
                    WHERE T.REQ_KEY = A.G_KEY
                ) as classCtgKey
            FROM T_GOODS A
            WHERE A.TYPE = 4
            AND A.IS_SHOW = 1
            AND A.IS_SELL = 1
            <if test="searchText != ''">
                <if test="searchType == 'name'">
                    AND A.NAME LIKE '%'||#{searchText}||'%'
                </if>
            </if>
            ORDER BY A.G_KEY DESC
        )T
        WHERE 1=1
        AND T.onOffKey = #{onOffKey}
        <if test="ctgKey > 0">
            AND T.classCtgKey = #{ctgKey}
        </if>
    </select>

    <select id="selectMockExamProductList" resultType="MockExamProductVO">
        SELECT T.* FROM (
            SELECT
                A.NAME as goodsName,
                (SELECT PRICE_KEY FROM T_GOODS_PRICE_OPTION T WHERE A.G_KEY = T.G_KEY AND T.KIND = 0) priceKey,
                TRIM( (SELECT TO_CHAR(PRICE, '999,999,999,999,999') FROM T_GOODS_PRICE_OPTION Z WHERE Z.G_KEY = A.G_KEY AND Z.KIND = 0)) as price,
                TRIM( (SELECT TO_CHAR(SELL_PRICE, '999,999,999,999,999') FROM T_GOODS_PRICE_OPTION Z WHERE Z.G_KEY = A.G_KEY AND Z.KIND = 0)) as sellPrice,
                CASE (SELECT RES_TYPE FROM T_LINK_KEY TT WHERE A.G_KEY = TT.REQ_KEY) WHEN 2 THEN '온라인' WHEN 3 THEN '오프라인' END as isOnOff,
                A.IS_SELL,
                (SELECT RES_TYPE FROM T_LINK_KEY TT WHERE A.G_KEY = TT.REQ_KEY) as onOffKey,
                (
                    SELECT T.RES_KEY
                    FROM T_LINK_KEY T INNER JOIN T_EXAM_MASTER TT
                    ON T.RES_KEY = TT.EXAM_KEY
                    WHERE T.REQ_KEY = A.G_KEY
                ) as examKey,
                (
                    SELECT TT.CLASS_CTG_KEY
                    FROM T_LINK_KEY T INNER JOIN T_EXAM_MASTER TT
                    ON T.RES_KEY = TT.EXAM_KEY
                    WHERE T.REQ_KEY = A.G_KEY
                ) as classCtgKey,
                A.G_KEY
            FROM T_GOODS A
            WHERE A.TYPE = 4
            AND A.IS_SHOW = 1
            AND A.IS_SELL = 1
            <if test="searchText != ''">
                <if test="searchType == 'name'">
                    AND A.NAME LIKE '%'||#{searchText}||'%'
                </if>
            </if>
            ORDER BY A.G_KEY DESC
         )T
        WHERE 1=1
        AND T.onOffKey = #{onOffKey}
        <if test="ctgKey > 0">
            AND T.classCtgKey = #{ctgKey}
        </if>
        OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectGoodsPriceOptionByPriceKey" resultType="TGoodsPriceOptionVO">
        SELECT * FROM T_GOODS_PRICE_OPTION WHERE PRICE_KEY = #{priceKey}
    </select>

    <select id="selectGoodsPriceOptionByGKey" resultType="TGoodsPriceOptionVO">
        SELECT * FROM T_GOODS_PRICE_OPTION WHERE G_KEY = #{gKey}
    </select>

    <select id="selectGoodsPriceOptionByGKeySingle" resultType="TGoodsPriceOptionVO">
        SELECT * FROM T_GOODS_PRICE_OPTION WHERE G_KEY = #{gKey}
    </select>

    <select id="selectGoodsType" resultType="Integer">
        SELECT TYPE FROM T_GOODS WEHRE G_KEY = #{gKey}
    </select>

    <select id="selectTeacherNameListByVideoProduct" resultType="String">
		SELECT C.name
		FROM t_goods_teacher_link A
		INNER JOIN t_teacher B
		ON A.teacher_key = B.teacher_key
		INNER JOIN t_user C
		ON B.user_key = C.user_key
		WHERE A.g_key = #{gKey}
	</select>

    <select id="selectTLecInfo" parameterType="Integer" resultType="TLecVO">
		SELECT * FROM T_LEC WHERE G_KEY = #{gKey}
	</select>

    <select id="selectTGoodsInfo" parameterType="Integer" resultType="TGoodsVO">
		SELECT * FROM T_GOODS WHERE G_KEY = #{gKey}
	</select>

    <select id="selectTPromotionInfoByGKey" resultType="TPromotionVO">
        SELECT * FROM T_PROMOTION WHERE G_KEY = #{gKey}
    </select>

    <select id="selectGoodsPriceOptionListBySpecialPackage" resultType="TCartLinkGoodsVO">
        SELECT PRICE_KEY, G_KEY, KIND, 0 as cartKey, 0 as cartLinkKey
        FROM T_GOODS_PRICE_OPTION
        WHERE 1=1
        <if test="kind > 0">
            AND KIND = #{kind}
        </if>
        AND G_KEY IN
        (
            SELECT A.RES_KEY
            FROM T_LINK_KEY A
            INNER JOIN T_GOODS B
            ON A.RES_KEY = B.G_KEY
            WHERE A.REQ_KEY = #{promotionGKey}
            AND A.RES_TYPE = 1
        )
    </select>

    <select id="selectZianPassPageKeyFromGKey" resultType="Integer">
        SELECT A.REQ_KEY as zianPassPageKey
        FROM T_LINK_KEY A
        INNER JOIN T_GOODS B
        ON A.RES_KEY = B.G_KEY
        WHERE A.RES_KEY = #{gKey}
        AND A.RES_TYPE = 1
    </select>

    <select id="selectGoodsPriceOptionListByZianPass" resultType="Integer">
        SELECT A.RES_KEY
        FROM T_LINK_KEY A
        INNER JOIN T_GOODS B
        ON A.RES_KEY = B.G_KEY
        WHERE A.REQ_KEY = #{gKey}
        AND A.RES_TYPE = 1
    </select>

    <select id="selectTCategoryGoods" resultType="TCategoryGoodsVO">
        SELECT * FROM T_CATEGORY_GOODS WHERE G_KEY = #{gKey}
    </select>

    <select id="selectTCategoryGoodsOne" resultType="TCategoryGoodsVO">
        SELECT * FROM T_CATEGORY_GOODS WHERE G_KEY = #{gKey} AND ROWNUM =1
    </select>

    <select id="selectTGoodsPriceOptionCount" resultType="Integer">
        SELECT count(*) from t_goods_price_option where g_key = #{gKey}
    </select>

    <select id="selectFreeLectureListCountFromCategoryMenu" resultType="int">
        SELECT COUNT(C.LEC_KEY)
        FROM T_CATEGORY_GOODS A
        INNER JOIN T_GOODS B
        ON A.G_KEY = B.G_KEY
        INNER JOIN T_LEC C
        ON A.G_KEY = C.G_KEY
        INNER JOIN T_CATEGORY D
        ON C.STEP_CTG_KEY = D.CTG_KEY
        INNER JOIN T_GOODS_TEACHER_LINK E
        ON A.G_KEY = E.G_KEY
        INNER JOIN T_TEACHER F
        ON E.TEACHER_KEY = F.TEACHER_KEY
        WHERE A.CTG_KEY IN (
            SELECT CTG_KEY FROM T_CATEGORY WHERE PARENT_KEY = #{ctgKey}
        )
        <if test="freeLectureType == 'THEORY'">
            AND C.STEP_CTG_KEY IN (203, 207, 774, 4172)
        </if>
        <if test="freeLectureType == 'PREV'">
            AND C.STEP_CTG_KEY IN (205, 4266)
        </if>
        <if test="stepCtgKey > 0">
            AND C.STEP_CTG_KEY = #{stepCtgKey}
        </if>
        AND B.TYPE = 1
        AND B.IS_SHOW = 1
        AND B.IS_FREE = 1
    </select>

    <select id="selectFreeLectureListFromCategoryMenu" resultType="FreeLectureVO">
        SELECT T.* FROM
        (
            SELECT
                A.G_KEY, C.LEC_KEY, C.STEP_CTG_KEY,D.NAME as ctgName,
                (SELECT NAME FROM T_CATEGORY Z WHERE Z.CTG_KEY = C.SUBJECT_CTG_KEY) subjectName,
                B.NAME as goodsName,
                (SELECT COUNT(LEC_KEY) FROM T_LEC_CURRI Z WHERE Z.LEC_KEY = C.LEC_KEY) as lecCount, C.FREE_THUMBNAIL_IMG,
                (SELECT NAME FROM T_USER Z WHERE Z.USER_KEY = F.USER_KEY) teacherName
            FROM T_CATEGORY_GOODS A
            INNER JOIN T_GOODS B
            ON A.G_KEY = B.G_KEY
            INNER JOIN T_LEC C
            ON A.G_KEY = C.G_KEY
            INNER JOIN T_CATEGORY D
            ON C.STEP_CTG_KEY = D.CTG_KEY
            INNER JOIN T_GOODS_TEACHER_LINK E
            ON A.G_KEY = E.G_KEY
            INNER JOIN T_TEACHER F
            ON E.TEACHER_KEY = F.TEACHER_KEY
            WHERE A.CTG_KEY IN (
                SELECT CTG_KEY FROM T_CATEGORY WHERE PARENT_KEY = #{ctgKey}
            )
            <if test="freeLectureType == 'THEORY'">
                AND C.STEP_CTG_KEY IN (203, 207, 774, 4172)
            </if>
            <if test="freeLectureType == 'PREV'">
                AND C.STEP_CTG_KEY IN (205, 4266)
            </if>
            <if test="stepCtgKey > 0">
                AND C.STEP_CTG_KEY = #{stepCtgKey}
            </if>
            AND B.TYPE = 1
            AND B.IS_SHOW = 1
            AND B.IS_FREE = 1
            OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
        )T
        ORDER BY T.STEP_CTG_KEY ASC, T.G_KEY ASC
    </select>

    <select id="selectFreeLectureListFromLecKey" resultType="FreeLectureVO">
        SELECT  T.* FROM
        (
            SELECT
                A.G_KEY, C.LEC_KEY, C.STEP_CTG_KEY, D.NAME as ctgName,
                (SELECT NAME FROM T_CATEGORY Z WHERE Z.CTG_KEY = C.SUBJECT_CTG_KEY) subjectName,
                B.NAME as goodsName,
                (SELECT COUNT(LEC_KEY) FROM T_LEC_CURRI Z WHERE Z.LEC_KEY = C.LEC_KEY) as lecCount, C.FREE_THUMBNAIL_IMG,
                (SELECT NAME FROM T_USER Z WHERE Z.USER_KEY = F.USER_KEY) teacherName,
                E.TEACHER_KEY
            FROM T_CATEGORY_GOODS A
            INNER JOIN T_GOODS B
            ON A.G_KEY = B.G_KEY
            INNER JOIN T_LEC C
            ON A.G_KEY = C.G_KEY
            INNER JOIN T_CATEGORY D
            ON C.STEP_CTG_KEY = D.CTG_KEY
            INNER JOIN T_GOODS_TEACHER_LINK E
            ON A.G_KEY = E.G_KEY
            INNER JOIN T_TEACHER F
            ON E.TEACHER_KEY = F.TEACHER_KEY
            WHERE C.LEC_KEY = #{lecKey}
        )T
        GROUP BY T.G_KEY, T.LEC_KEY, T.STEP_CTG_KEY, T.ctgName, T.subjectName, T.goodsName, T.lecCount, T.FREE_THUMBNAIL_IMG, T.teacherName, T.TEACHER_KEY
    </select>

    <select id="selectFreeLectureStepList" resultType="com.zianedu.api.dto.TypeDTO">
        SELECT T.* FROM
        (
            SELECT C.STEP_CTG_KEY as ctgKey, D.NAME as ctgName
            FROM T_CATEGORY_GOODS A
            INNER JOIN T_GOODS B
            ON A.G_KEY = B.G_KEY
            INNER JOIN T_LEC C
            ON A.G_KEY = C.G_KEY
            INNER JOIN T_CATEGORY D
            ON C.STEP_CTG_KEY = D.CTG_KEY
            INNER JOIN T_GOODS_TEACHER_LINK E
            ON A.G_KEY = E.G_KEY
            INNER JOIN T_TEACHER F
            ON E.TEACHER_KEY = F.TEACHER_KEY
            WHERE A.CTG_KEY IN (
                SELECT CTG_KEY FROM T_CATEGORY WHERE PARENT_KEY = #{ctgKey}
            )
            <if test="freeLectureType == 'THEORY'">
                AND C.STEP_CTG_KEY IN (203, 207, 774, 4172)
            </if>
            <if test="freeLectureType == 'PREV'">
                AND C.STEP_CTG_KEY IN (205, 4266)
            </if>
            AND B.TYPE = 1
            AND B.IS_SHOW = 1
            AND B.IS_FREE = 1
            GROUP BY C.STEP_CTG_KEY, D.NAME
        )T
        ORDER BY T.ctgKey ASC
    </select>

    <select id="selectTLecCurriList" resultType="TLecCurriVO">
        SELECT
            CURRI_KEY, NAME, VOD_TIME,
            <if test="device == 'PC'">
                CONCAT('http://zianedu.star.skcdn.com/',VOD_FILE_LOW) as VOD_FILE_LOW,
                CONCAT('http://zianedu.star.skcdn.com/',VOD_FILE_HIGH) as VOD_FILE_HIGH,
            </if>
            <if test="device == 'MOBILE'">
                CONCAT('http://zianedu.star.skcdn.com/',VOD_FILE_MOBILE_LOW) as VOD_FILE_LOW,
                CONCAT('http://zianedu.star.skcdn.com/',VOD_FILE_MOBILE_HIGH) as VOD_FILE_HIGH,
            </if>
            DATA_FILE
        FROM T_LEC_CURRI WHERE LEC_KEY = #{lecKey}
        ORDER BY POS ASC
    </select>

    <select id="selectZianPassProductAffiliationList" resultType="com.zianedu.api.dto.TypeDTO">
        SELECT
            B.AFFILIATION_CTG_KEY as ctgKey,
            (SELECT NAME FROM T_CATEGORY Z WHERE Z.CTG_KEY = B.AFFILIATION_CTG_KEY ) as ctgName
        FROM T_GOODS A
        LEFT JOIN T_PROMOTION B
        ON A.G_KEY = B.G_KEY
        LEFT JOIN T_GOODS_PRICE_OPTION C
        ON A.G_KEY = C.G_KEY
        WHERE A.PARENT_KEY = #{parentKey}
        AND B.PM_TYPE = #{pmType}
        AND A.TYPE = 5
        AND A.IS_SELL = 1
        GROUP BY B.AFFILIATION_CTG_KEY
        ORDER BY AFFILIATION_CTG_KEY ASC
    </select>

    <select id="selectZianPassProductList" resultMap="zianPassProductMap">
        SELECT A.G_KEY, A.NAME, C.SELL_PRICE,
               B.AFFILIATION_CTG_KEY,
               (SELECT NAME FROM T_CATEGORY Z WHERE Z.CTG_KEY = B.AFFILIATION_CTG_KEY ) as affiliationName,
               TRIM( TO_CHAR(C.SELL_PRICE, '999,999,999,999,999') ) as sellPrice,
               C.PRICE_KEY,
               '5' as type,
               '100' as pmType,
               CONCAT(C.KIND, '개월') as term
        FROM T_GOODS A
        LEFT JOIN T_PROMOTION B
        ON A.G_KEY = B.G_KEY
        LEFT JOIN T_GOODS_PRICE_OPTION C
        ON A.G_KEY = C.G_KEY
        WHERE A.PARENT_KEY = #{parentKey}
        AND B.PM_TYPE = #{pmType}
        AND A.TYPE = 5
        AND A.IS_SELL = 1
        ORDER BY AFFILIATION_CTG_KEY ASC
    </select>

    <select id="selectZianPassSubjectSingleProductList" resultMap="zianPassProductMap">
        SELECT A.G_KEY, A.NAME, C.SELL_PRICE,
               '단과지안패스' as affiliationName,
               TRIM( TO_CHAR(C.SELL_PRICE, '999,999,999,999,999') ) as sellPrice,
               '5' as type,
               '100' as pmType
        FROM T_GOODS A
        LEFT JOIN T_PROMOTION B
        ON A.G_KEY = B.G_KEY
        LEFT JOIN T_GOODS_PRICE_OPTION C
        ON A.G_KEY = C.G_KEY
        WHERE A.PARENT_KEY = #{parentKey}
        AND A.TYPE = 5
        AND A.IS_SELL = 1
    </select>
    <!-- 지안패스 직렬별 그룹 서브 메뉴 리스트 -->
    <select id="selectZianPassSubMenuList" resultType="ZianPassSubMenuVO">
        SELECT
            B.AFFILIATION_CTG_KEY as menuKey,
            (SELECT NAME FROM T_CATEGORY Z WHERE Z.CTG_KEY = B.AFFILIATION_CTG_KEY ) as name
        FROM T_GOODS A
        LEFT JOIN T_PROMOTION B
        ON A.G_KEY = B.G_KEY
        LEFT JOIN T_GOODS_PRICE_OPTION C
        ON A.G_KEY = C.G_KEY
        WHERE A.PARENT_KEY = #{parentKey}
        AND A.TYPE = 5
        AND A.IS_SELL = 1
        GROUP BY B.AFFILIATION_CTG_KEY
        ORDER BY B.AFFILIATION_CTG_KEY ASC
    </select>

    <!-- 단과 지안패스 메뉴 상세 항목을 만들기 위한 쿼리 -->
    <select id="selectZianPassSingleSubjectMenuList" resultType="ZianPassSubMenuVO">
        SELECT A.G_KEY as menuKey, A.NAME
        FROM T_GOODS A
        LEFT JOIN T_PROMOTION B
        ON A.G_KEY = B.G_KEY
        LEFT JOIN T_GOODS_PRICE_OPTION C
        ON A.G_KEY = C.G_KEY
        WHERE A.PARENT_KEY = #{parentKey}
        AND A.TYPE = 5
        AND A.IS_SELL = 1
        ORDER BY AFFILIATION_CTG_KEY ASC
    </select>

    <!-- 수강중인 동영상 강좌 과목 리스트 -->
    <select id="selectVideoOnlineSignUpSubjectList" resultType="com.zianedu.api.dto.SubjectDTO">
        SELECT Z.SUBJECT_CTG_KEY, Z.subjectName FROM
        (
            SELECT
                D.SUBJECT_CTG_KEY, F.NAME as subjectName,
                NVL(E.START_DT, sysdate) as start_dt, E.LIMIT_DAY
            FROM T_ORDER_GOODS A
            LEFT JOIN T_ORDER B
            ON A.J_KEY = B.J_KEY
            LEFT JOIN T_LEC D
            ON A.G_KEY = D.G_KEY
            LEFT OUTER JOIN T_ORDER_LEC E
            ON A.J_G_KEY = E.J_G_KEY
            LEFT JOIN T_CATEGORY F
            ON F.CTG_KEY = D.SUBJECT_CTG_KEY
            WHERE 1=1
            AND B.USER_KEY = #{userKey}
            AND B.pay_status = 2
            AND A.j_pm_key = 0
            AND E.PAUSE_DAY = 0
            <if test="deviceType != '' and deviceType != null">
                <if test="deviceType == 'PC'">
                    AND A.KIND IN (100, 102)
                </if>
                <if test="deviceType == 'MOBILE'">
                    AND A.KIND IN (101, 102)
                </if>
            </if>
        )Z
        WHERE 1=1
        <![CDATA[
            AND Z.start_dt  <= sysdate
             ]]>
        <![CDATA[
            AND (Z.start_dt + Z.limit_day) >= sysdate
         ]]>
        GROUP BY Z.SUBJECT_CTG_KEY, Z.subjectName
        ORDER BY Z.SUBJECT_CTG_KEY ASC
    </select>

    <select id="selectVideoOnlineSignUpTypeList" resultType="com.zianedu.api.dto.TypeDTO">
        SELECT Z.ctgKey, Z.ctgName
        FROM(
            SELECT
                ( SELECT Z.CTG_KEY FROM t_category Z WHERE Z.ctg_key = D.step_ctg_key ) as ctgKey,
                ( SELECT Z.name FROM t_category Z WHERE Z.ctg_key = D.step_ctg_key ) as ctgName,
                NVL(E.start_dt, sysdate) as start_dt,
                E.limit_day
            FROM T_ORDER_GOODS A
            INNER JOIN T_ORDER B
            ON A.J_KEY = B.J_KEY
            INNER JOIN T_GOODS C
            ON A.G_KEY = C.G_KEY
            INNER JOIN T_LEC D
            ON C.G_KEY = D.G_KEY
            INNER JOIN T_ORDER_LEC E
            ON A.J_G_KEY = E.J_G_KEY
            WHERE 1=1
            AND B.user_key = #{userKey}
            AND B.pay_status = 2
            AND A.j_pm_key = 0
            AND E.PAUSE_DAY = 0
            <if test="deviceType != '' and deviceType != null">
                <if test="deviceType == 'PC'">
                    AND A.KIND IN (100, 102)
                </if>
                <if test="deviceType == 'MOBILE'">
                    AND A.KIND IN (101, 102)
                </if>
            </if>
        )Z
        WHERE 1=1
        <![CDATA[
            AND Z.start_dt <= sysdate
         ]]>
        <![CDATA[
            AND  (Z.start_dt + Z.limit_day) >= sysdate
        ]]>
        GROUP BY Z.ctgKey, Z.ctgName
        ORDER BY Z.ctgKey ASC
    </select>

    <select id="selectSignUpLectureList" resultType="SignUpLectureVO">
        SELECT Z.J_KEY, Z.J_G_KEY, Z.G_KEY, Z.NAME, Z.J_LEC_KEY
        FROM (
            SELECT
                B.J_KEY,
                A.J_G_KEY,
                A.G_KEY,
                C.NAME,
                E.J_LEC_KEY,
                NVL(E.start_dt, sysdate) as start_dt,
                E.LIMIT_DAY
            FROM T_ORDER_GOODS A
            INNER JOIN T_ORDER B
            ON A.J_KEY = B.J_KEY
            INNER JOIN T_GOODS C
            ON A.G_KEY = C.G_KEY
            INNER JOIN T_LEC D
            ON C.G_KEY = D.G_KEY
            INNER JOIN T_ORDER_LEC E
            ON A.J_G_KEY = E.J_G_KEY
            WHERE 1=1
            AND B.user_key = #{userKey}
            AND B.pay_status = 2
            AND A.j_pm_key = 0
            AND E.PAUSE_DAY = 0
            <if test="subjectCtgKey > 0">
                AND D.subject_ctg_key = #{subjectCtgKey}
            </if>
            <if test="stepCtgKey > 0">
                AND D.step_ctg_key = #{stepCtgKey}
            </if>
            <if test="deviceType != '' and deviceType != null">
                <if test="deviceType == 'PC'">
                    AND A.KIND IN (100, 102)
                </if>
                <if test="deviceType == 'MOBILE'">
                    AND A.KIND IN (101, 102)
                </if>
            </if>
        ) Z
        WHERE 1=1
        <![CDATA[
            AND Z.start_dt <= sysdate
        ]]>
        <![CDATA[
            AND  (Z.start_dt + Z.limit_day) >= sysdate
        ]]>
        GROUP BY Z.J_KEY, Z.J_G_KEY, Z.G_KEY, Z.NAME, Z.J_LEC_KEY
        ORDER BY Z.J_LEC_KEY DESC
    </select>

    <select id="selectSignUpZianPassList" resultType="ZianPassSignUpVO">
        SELECT A.J_G_KEY, A.J_KEY, A.G_KEY, A.G_NAME
        FROM T_ORDER_GOODS A
        LEFT OUTER JOIN T_ORDER B
        ON A.J_KEY = B.J_KEY
        LEFT OUTER JOIN T_GOODS_PRICE_OPTION C
        ON A.G_KEY = C.G_KEY
        WHERE A.type = 5
        AND A.pm_type = 100
        AND B.PAY_STATUS = 2
        AND B.USER_KEY = #{userKey}
         <![CDATA[
            AND TO_DATE(B.PAY_DATE, 'YYYY-MM-DD') <= TO_CHAR(sysdate, 'YYYY-MM-DD')
         ]]>
        <![CDATA[
            AND (B.pay_date + (C.KIND * 31)) >= TO_CHAR(sysdate, 'YYYY-MM-DD')
        ]]>
    </select>

    <select id="selectSignUpPackageList" resultType="ZianPassSignUpVO">
        SELECT A.J_G_KEY, A.J_KEY, A.G_KEY, A.G_NAME
        FROM T_ORDER_GOODS A
        LEFT OUTER JOIN T_ORDER B
        ON A.J_KEY = B.J_KEY
        LEFT OUTER JOIN T_PROMOTION C
        ON A.G_KEY = C.G_KEY
        WHERE A.type = 5
        AND A.pm_type = 1
        AND B.PAY_STATUS = 2
        AND B.USER_KEY = #{userKey}
         <![CDATA[
        AND TO_DATE(B.PAY_DATE, 'YYYY-MM-DD') <= TO_CHAR(sysdate, 'YYYY-MM-DD')
         ]]>
        <![CDATA[
        AND (B.pay_date + C.LIMIT_DAY)  >= TO_CHAR(sysdate, 'YYYY-MM-DD')
         ]]>
    </select>

    <select id="selectSignUpZianPassTypeList" resultType="com.zianedu.api.dto.TypeDTO">
        SELECT * FROM (
            SELECT
                ( SELECT Z.CTG_KEY FROM t_category Z WHERE Z.ctg_key = D.step_ctg_key ) as ctgKey,
                ( SELECT Z.name FROM t_category Z WHERE Z.ctg_key = D.step_ctg_key ) as ctgName
            FROM T_ORDER_GOODS A
            INNER JOIN T_ORDER B
            ON A.J_KEY = B.J_KEY
            INNER JOIN T_GOODS C
            ON A.G_KEY = C.G_KEY
            INNER JOIN T_LEC D
            ON C.G_KEY = D.G_KEY
            INNER JOIN T_ORDER_LEC E
            ON A.J_G_KEY = E.J_G_KEY
            WHERE A.J_KEY = #{jKey}
            AND A.J_PM_KEY > 0
            AND E.PAUSE_DAY = 0
            <if test="deviceType != '' and deviceType != null">
                <if test="deviceType == 'PC'">
                    AND A.KIND IN (100, 102)
                </if>
                <if test="deviceType == 'MOBILE'">
                    AND A.KIND IN (101, 102)
                </if>
            </if>
        )Z
        GROUP BY Z.ctgKey, Z.ctgName
        ORDER BY Z.ctgKey ASC
    </select>

    <select id="selectZianPassSubjectNameList" resultType="SignUpLectureVO">
        SELECT
            B.J_KEY,
            A.J_G_KEY,
            A.G_KEY,
            C.NAME,
            E.J_LEC_KEY
        FROM T_ORDER_GOODS A
        INNER JOIN T_ORDER B
        ON A.J_KEY = B.J_KEY
        INNER JOIN T_GOODS C
        ON A.G_KEY = C.G_KEY
        INNER JOIN T_LEC D
        ON C.G_KEY = D.G_KEY
        INNER JOIN T_ORDER_LEC E
        ON A.J_G_KEY = E.J_G_KEY
        WHERE A.J_KEY = #{jKey}
        AND A.J_PM_KEY > 0
        AND E.PAUSE_DAY = 0
        <if test="stepCtgKey > 0">
            AND D.step_ctg_key = #{stepCtgKey}
        </if>
        <if test="deviceType != '' and deviceType != null">
            <if test="deviceType == 'PC'">
                AND A.KIND IN (100, 102)
            </if>
            <if test="deviceType == 'MOBILE'">
                AND A.KIND IN (101, 102)
            </if>
        </if>
        GROUP BY B.J_KEY, A.J_G_KEY, A.G_KEY, C.NAME, E.J_LEC_KEY
        ORDER BY A.G_KEY ASC
    </select>

    <select id="selectVideoLectureListByJLecKey" resultType="TLecCurriVO">
        SELECT ROW_NUMBER() OVER(ORDER BY TT.CURRI_KEY) NUM, TT.*
        FROM (
            SELECT
            ROW_NUMBER() OVER(ORDER BY Z.CURRI_KEY) NUM,
            Z.CURRI_KEY, Z.NAME, Z.VOD_TIME, Z.LEC_KEY,
            <if test="deviceType == 'PC'">
                CONCAT('http://zianedu.star.skcdn.com/', Z.VOD_FILE_LOW) as vodFileLow,
                CONCAT('http://zianedu.star.skcdn.com/', Z.VOD_FILE_HIGH) as vodFileHigh,
            </if>
            <if test="deviceType == 'MOBILE'">
                CONCAT('http://zianedu.star.skcdn.com/', Z.VOD_FILE_MOBILE_LOW) as vodFileLow,
                CONCAT('http://zianedu.star.skcdn.com/', Z.VOD_FILE_MOBILE_HIGH) as vodFileHigh,
            </if>
            Z.DATA_FILE,
            NVL((SELECT J_CURRI_KEY FROM T_ORDER_LEC_CURRI WHERE CURRI_KEY = Z.CURRI_KEY AND J_LEC_KEY = #{jLecKey}), 0)
            as J_CURRI_KEY,
            NVL((SELECT TIME FROM T_ORDER_LEC_CURRI WHERE CURRI_KEY = Z.CURRI_KEY AND J_LEC_KEY = #{jLecKey}), 0)
            as REMAIN_TIME
            FROM T_LEC_CURRI Z
            WHERE Z.LEC_KEY = (
            SELECT C.LEC_KEY
            FROM T_ORDER_LEC A
            INNER JOIN T_ORDER_GOODS B
            ON A.J_G_KEY = B.J_G_KEY
            INNER JOIN T_LEC C
            ON B.G_KEY = C.G_KEY
            WHERE A.J_LEC_KEY = #{jLecKey}
            )
            AND Z.IS_SHOW = 1
            ORDER BY Z.CURRI_KEY ASC
        )TT
    </select>

    <select id="selectVideoLectureRemainTimeByJLecKeyAndCurriKey" resultType="TLecCurriVO">
        SELECT TT.*
        FROM (
            SELECT
                Z.CURRI_KEY,
                NVL((SELECT TIME FROM T_ORDER_LEC_CURRI WHERE CURRI_KEY = Z.CURRI_KEY AND J_LEC_KEY = #{jLecKey}), 0) as REMAIN_TIME,
                Z.VOD_TIME
            FROM T_LEC_CURRI Z
            WHERE Z.LEC_KEY = (
            SELECT C.LEC_KEY
            FROM T_ORDER_LEC A
            INNER JOIN T_ORDER_GOODS B
            ON A.J_G_KEY = B.J_G_KEY
            INNER JOIN T_LEC C
            ON B.G_KEY = C.G_KEY
            WHERE A.J_LEC_KEY = #{jLecKey}
            )
            AND Z.IS_SHOW = 1
            ORDER BY Z.CURRI_KEY ASC
        )TT
        WHERE 1=1
        <if test="curriKey > 0">
            AND TT.CURRI_KEY = #{curriKey}
        </if>
    </select>

    <select id="selectSignUpAcademyTypeList" resultType="com.zianedu.api.dto.TypeDTO">
        SELECT
            ( SELECT Z.name FROM t_category Z WHERE Z.ctg_key = D.step_ctg_key ) as ctgName,
            ( SELECT Z.ctg_key FROM t_category Z WHERE Z.ctg_key = D.step_ctg_key ) as ctgKey
        FROM T_ORDER_GOODS A
        INNER JOIN T_ORDER B
        ON A.J_KEY = B.J_KEY
        INNER JOIN T_GOODS C
        ON A.G_KEY = C.G_KEY
        INNER JOIN t_lec D
        ON C.G_KEY = D.G_KEY
        WHERE 1=1
        AND A.USER_KEY = #{userKey}
        AND A.TYPE = 2
        AND B.PAY_STATUS = 2
        GROUP BY D.step_ctg_key
        ORDER BY D.step_ctg_key ASC
    </select>

    <select id="selectSignUpAcademySubjectNameList" resultType="SignUpLectureVO">
        SELECT B.J_KEY, A.J_G_KEY, A.G_KEY, C.NAME
        FROM T_ORDER_GOODS A
        INNER JOIN T_ORDER B
        ON A.J_KEY = B.J_KEY
        INNER JOIN T_GOODS C
        ON A.G_KEY = C.G_KEY
        INNER JOIN t_lec D
        ON C.G_KEY = D.G_KEY
        WHERE 1=1
        AND A.USER_KEY = #{userKey}
        AND A.TYPE = 2
        AND B.PAY_STATUS = 2
        AND D.step_ctg_key = #{stepCtgKey}
        ORDER BY B.J_KEY DESC
    </select>

    <select id="selectSignUpVideoLecturePauseTypeList" resultType="com.zianedu.api.dto.TypeDTO">
        SELECT
            ( SELECT Z.name FROM t_category Z WHERE Z.ctg_key = D.step_ctg_key ) as ctgName,
            ( SELECT Z.ctg_key FROM t_category Z WHERE Z.ctg_key = D.step_ctg_key ) as ctgKey
        FROM T_ORDER_GOODS A
        INNER JOIN T_ORDER B
        ON A.J_KEY = B.J_KEY
        INNER JOIN T_GOODS C
        ON A.G_KEY = C.G_KEY
        INNER JOIN T_LEC D
        ON C.G_KEY = D.G_KEY
        INNER JOIN T_ORDER_LEC E
        ON A.J_G_KEY = E.J_G_KEY
        WHERE 1=1
        AND B.user_key = #{userKey}
        AND B.pay_status = 2
        AND E.PAUSE_DAY > 0
        GROUP BY D.step_ctg_key
        ORDER BY D.STEP_CTG_KEY
    </select>

    <select id="selectSignUpVideoLecturePauseSubjectList" resultType="SignUpLectureVO">
        SELECT B.J_KEY, A.J_G_KEY, A.G_KEY, C.NAME, E.J_LEC_KEY
        FROM T_ORDER_GOODS A
        INNER JOIN T_ORDER B
        ON A.J_KEY = B.J_KEY
        INNER JOIN T_GOODS C
        ON A.G_KEY = C.G_KEY
        INNER JOIN T_LEC D
        ON C.G_KEY = D.G_KEY
        INNER JOIN T_ORDER_LEC E
        ON A.J_G_KEY = E.J_G_KEY
        WHERE 1=1
        AND B.user_key = #{userKey}
        AND B.pay_status = 2
        AND E.PAUSE_DAY > 0
        AND D.STEP_CTG_KEY = #{stepCtgKey}
        ORDER BY D.STEP_CTG_KEY
    </select>

    <select id="selectSignUpVideoLectureEndTypeList" resultType="com.zianedu.api.dto.TypeDTO">
        SELECT Z.ctgKey, Z.ctgName
        FROM (
            SELECT
                ( SELECT Z.CTG_KEY FROM t_category Z WHERE Z.ctg_key = D.step_ctg_key ) as ctgKey,
                ( SELECT Z.name FROM t_category Z WHERE Z.ctg_key = D.step_ctg_key ) as ctgName,
                NVL(A.PM_TYPE, 0) as pm_type
            FROM T_ORDER_GOODS A
            INNER JOIN T_ORDER B
            ON A.J_KEY = B.J_KEY
            INNER JOIN T_GOODS C
            ON A.G_KEY = C.G_KEY
            INNER JOIN T_LEC D
            ON C.G_KEY = D.G_KEY
            INNER JOIN T_ORDER_LEC E
            ON A.J_G_KEY = E.J_G_KEY
            WHERE 1=1
            AND A.TYPE = 1
            AND B.PAY_TYPE NOT IN (20)
            AND B.PAY_STATUS = 2
            AND E.STATUS = 3
            AND B.USER_KEY = #{userKey}
            AND A.J_PM_KEY = 0
            <if test="deviceType != '' and deviceType != null">
                <if test="deviceType == 'PC'">
                    AND A.KIND IN (100, 102)
                </if>
                <if test="deviceType == 'MOBILE'">
                    AND A.KIND IN (101, 102)
                </if>
            </if>
        ) Z
        WHERE Z.PM_TYPE = 0
        GROUP BY Z.ctgKey, Z.ctgName
        ORDER BY Z.ctgKey ASC
    </select>

    <select id="selectSignUpVideoLectureEndSubjectList" resultType="SignUpLectureVO">
        SELECT * FROM (
            SELECT B.J_KEY, A.J_G_KEY, A.G_KEY, C.NAME, E.J_LEC_KEY, A.KIND,  NVL(A.PM_TYPE, 0) as pm_type, D.STEP_CTG_KEY
            FROM T_ORDER_GOODS A
            INNER JOIN T_ORDER B
            ON A.J_KEY = B.J_KEY
            INNER JOIN T_GOODS C
            ON A.G_KEY = C.G_KEY
            INNER JOIN T_LEC D
            ON C.G_KEY = D.G_KEY
            INNER JOIN T_ORDER_LEC E
            ON A.J_G_KEY = E.J_G_KEY
            LEFT OUTER JOIN T_ORDER_PROMOTION F
            ON A.J_PM_KEY = F.J_PM_KEY
            WHERE 1=1
            AND A.TYPE = 1
            AND B.PAY_TYPE NOT IN (20)
            AND B.PAY_STATUS = 2
            AND E.STATUS = 3
            AND B.USER_KEY = #{userKey}
            AND D.STEP_CTG_KEY = #{stepCtgKey}
            AND A.J_PM_KEY = 0
            <if test="deviceType != '' and deviceType != null">
                <if test="deviceType == 'PC'">
                    AND A.KIND IN (100, 102)
                </if>
                <if test="deviceType == 'MOBILE'">
                    AND A.KIND IN (101, 102)
                </if>
            </if>
        )Z
        WHERE Z.PM_TYPE = 0
        ORDER BY Z.STEP_CTG_KEY ASC
    </select>

    <select id="selectVideoOnlineEndListByJLecKey" resultType="OnlineVideoEndVO">
        SELECT
            B.J_KEY,
            A.J_G_KEY,
            A.G_KEY,
            TO_CHAR(E.START_DT, 'YYYY.MM.DD') as startDate,
            TO_CHAR((E.START_DT + E.LIMIT_DAY + E.PAUSE_TOTAL_DAY), 'YYYY.MM.DD') as endDate,
            ( SELECT Z.NAME FROM T_CATEGORY Z WHERE Z.CTG_KEY = D.STEP_CTG_KEY ) as ctgName,
            C.NAME,
            A.KIND,
            E.J_LEC_KEY,
            A.PRICE_KEY,
            TO_CHAR((E.START_DT + E.LIMIT_DAY + E.PAUSE_TOTAL_DAY + 90), 'YYYY-MM-DD') as limitDate,
            CASE WHEN
                <![CDATA[
                TO_CHAR((E.START_DT + E.LIMIT_DAY + E.PAUSE_TOTAL_DAY + 90), 'YYYY-MM-DD') <= sysdate
                ]]>
            THEN 'N'
            ELSE 'Y' END AS retakeYn
        FROM T_ORDER_GOODS A
        INNER JOIN T_ORDER B
        ON A.J_KEY = B.J_KEY
        INNER JOIN T_GOODS C
        ON A.G_KEY = C.G_KEY
        INNER JOIN T_LEC D
        ON C.G_KEY = D.G_KEY
        INNER JOIN T_ORDER_LEC E
        ON A.J_G_KEY = E.J_G_KEY
        WHERE 1=1
        AND A.TYPE = 1
        AND B.PAY_TYPE NOT IN (20)
        AND B.PAY_STATUS = 2
        AND E.STATUS = 3
        AND E.J_LEC_KEY = #{jLecKey}
        ORDER BY A.J_G_KEY ASC
    </select>

    <select id="selectLectureApplySubjectList" resultType="LectureApplySubjectVO">
        SELECT T.subjectKey, T.subjectName FROM
        (
            SELECT
                (SELECT CTG_KEY FROM T_CATEGORY Z WHERE Z.CTG_KEY = C.SUBJECT_CTG_KEY) as subjectKey,
                (SELECT NAME FROM T_CATEGORY Z WHERE Z.CTG_KEY = C.SUBJECT_CTG_KEY) as subjectName
            FROM T_CATEGORY_GOODS A
            INNER JOIN T_GOODS B
            ON A.G_KEY = B.G_KEY
            INNER JOIN T_LEC C
            ON A.G_KEY = C.G_KEY
            WHERE A.CTG_KEY IN (
                SELECT CTG_KEY FROM T_CATEGORY
                WHERE PARENT_KEY = #{menuCtgKey}
            )
            AND B.TYPE = #{productType}
            AND B.IS_SHOW = 1
            AND B.IS_SELL =1
        )T
        GROUP BY T.subjectKey, T.subjectName
        ORDER BY T.subjectKey ASC
    </select>

    <select id="selectLectureApplyTeacherList" resultType="LectureApplyTeacherVO">
        SELECT T.TEACHER_KEY, T.teacherName FROM
        (
            SELECT
                    F.TEACHER_KEY, (SELECT NAME FROM T_USER Z WHERE Z.USER_KEY = F.USER_KEY) as teacherName,
                    A.G_KEY, C.SUBJECT_CTG_KEY
            FROM T_CATEGORY_GOODS A
            INNER JOIN T_GOODS B
            ON A.G_KEY = B.G_KEY
            INNER JOIN T_LEC C
            ON A.G_KEY = C.G_KEY
            INNER JOIN T_CATEGORY D
            ON C.STEP_CTG_KEY = D.CTG_KEY
            INNER JOIN T_GOODS_TEACHER_LINK E
            ON A.G_KEY = E.G_KEY
            INNER JOIN T_TEACHER F
            ON E.TEACHER_KEY = F.TEACHER_KEY
            WHERE A.CTG_KEY IN (
                SELECT CTG_KEY FROM T_CATEGORY
                WHERE PARENT_KEY = #{menuCtgKey}
            )
            AND B.TYPE = #{productType}
            AND B.IS_SHOW = 1
            AND B.IS_SELL =1
            ORDER BY C.SUBJECT_CTG_KEY ASC
        )T
        GROUP BY T.TEACHER_KEY, T.teacherName
    </select>

    <select id="selectLectureApplyTeacherTypeList" resultType="LectureApplyTeacherTypeVO">
        SELECT
            TT.TEACHER_KEY, TT.teacherName, TT.IMAGE_TEACHER_LIST, TT.SUBJECT_CTG_KEY, TT.subjectMenuKey,
            (SELECT COUNT(T.TEACHER_KEY) FROM
                (
                    SELECT F.TEACHER_KEY
                    FROM T_CATEGORY_GOODS A
                    INNER JOIN T_GOODS B
                    ON A.G_KEY = B.G_KEY
                    INNER JOIN T_LEC C
                    ON A.G_KEY = C.G_KEY
                    INNER JOIN T_CATEGORY D
                    ON C.STEP_CTG_KEY = D.CTG_KEY
                    INNER JOIN T_GOODS_TEACHER_LINK E
                    ON A.G_KEY = E.G_KEY
                    INNER JOIN T_TEACHER F
                    ON E.TEACHER_KEY = F.TEACHER_KEY
                    WHERE A.CTG_KEY IN (
                     SELECT CTG_KEY FROM T_CATEGORY
                        WHERE PARENT_KEY = #{menuCtgKey}
                    )
                    AND B.TYPE = 1
                    AND B.IS_SHOW = 1
                    AND B.IS_SELL =1
                    AND C.STEP_CTG_KEY = 203
                )T
                WHERE T.TEACHER_KEY = TT.TEACHER_KEY
                GROUP BY T.TEACHER_KEY
                ) as theoryCnt,

            (SELECT COUNT(T.TEACHER_KEY) FROM
                (
                    SELECT F.TEACHER_KEY
                    FROM T_CATEGORY_GOODS A
                    INNER JOIN T_GOODS B
                    ON A.G_KEY = B.G_KEY
                    INNER JOIN T_LEC C
                    ON A.G_KEY = C.G_KEY
                    INNER JOIN T_CATEGORY D
                    ON C.STEP_CTG_KEY = D.CTG_KEY
                    INNER JOIN T_GOODS_TEACHER_LINK E
                    ON A.G_KEY = E.G_KEY
                    INNER JOIN T_TEACHER F
                    ON E.TEACHER_KEY = F.TEACHER_KEY
                    WHERE A.CTG_KEY IN (
                     SELECT CTG_KEY FROM T_CATEGORY
                        WHERE PARENT_KEY = #{menuCtgKey}
                    )
                    AND B.TYPE = 1
                    AND B.IS_SHOW = 1
                    AND B.IS_SELL =1
                    AND C.SUBJECT_CTG_KEY = TT.SUBJECT_CTG_KEY
                    AND C.STEP_CTG_KEY = 205
                )T
                WHERE T.TEACHER_KEY = TT.TEACHER_KEY
                GROUP BY T.TEACHER_KEY
                ) as problemSolveCnt,

            (SELECT COUNT(T.TEACHER_KEY) FROM
                (
                    SELECT F.TEACHER_KEY
                    FROM T_CATEGORY_GOODS A
                    INNER JOIN T_GOODS B
                    ON A.G_KEY = B.G_KEY
                    INNER JOIN T_LEC C
                    ON A.G_KEY = C.G_KEY
                    INNER JOIN T_CATEGORY D
                    ON C.STEP_CTG_KEY = D.CTG_KEY
                    INNER JOIN T_GOODS_TEACHER_LINK E
                    ON A.G_KEY = E.G_KEY
                    INNER JOIN T_TEACHER F
                    ON E.TEACHER_KEY = F.TEACHER_KEY
                    WHERE A.CTG_KEY IN (
                     SELECT CTG_KEY FROM T_CATEGORY
                        WHERE PARENT_KEY = #{menuCtgKey}
                    )
                    AND B.TYPE = 1
                    AND B.IS_SHOW = 1
                    AND B.IS_SELL =1
                    AND C.SUBJECT_CTG_KEY = TT.SUBJECT_CTG_KEY
                    AND C.STEP_CTG_KEY = 207
                )T
                WHERE T.TEACHER_KEY = TT.TEACHER_KEY
                GROUP BY T.TEACHER_KEY
                ) as singleSpecialCnt,

            (SELECT COUNT(T.TEACHER_KEY) FROM
                (
                    SELECT F.TEACHER_KEY
                    FROM T_CATEGORY_GOODS A
                    INNER JOIN T_GOODS B
                    ON A.G_KEY = B.G_KEY
                    INNER JOIN T_LEC C
                    ON A.G_KEY = C.G_KEY
                    INNER JOIN T_CATEGORY D
                    ON C.STEP_CTG_KEY = D.CTG_KEY
                    INNER JOIN T_GOODS_TEACHER_LINK E
                    ON A.G_KEY = E.G_KEY
                    INNER JOIN T_TEACHER F
                    ON E.TEACHER_KEY = F.TEACHER_KEY
                    WHERE A.CTG_KEY IN (
                     SELECT CTG_KEY FROM T_CATEGORY
                        WHERE PARENT_KEY = #{menuCtgKey}
                    )
                    AND B.TYPE = 1
                    AND B.IS_SHOW = 1
                    AND B.IS_SELL =1
                    AND C.SUBJECT_CTG_KEY = TT.SUBJECT_CTG_KEY
                    AND C.STEP_CTG_KEY = 4172
                )T
                WHERE T.TEACHER_KEY = TT.TEACHER_KEY
                GROUP BY T.TEACHER_KEY
                ) as prepareNoteCnt,

                (SELECT COUNT(T.TEACHER_KEY) FROM
                    (
                        SELECT F.TEACHER_KEY

                        FROM T_CATEGORY_GOODS A
                        INNER JOIN T_GOODS B
                        ON A.G_KEY = B.G_KEY
                        INNER JOIN T_LEC C
                        ON A.G_KEY = C.G_KEY
                        INNER JOIN T_CATEGORY D
                        ON C.STEP_CTG_KEY = D.CTG_KEY
                        INNER JOIN T_GOODS_TEACHER_LINK E
                        ON A.G_KEY = E.G_KEY
                        INNER JOIN T_TEACHER F
                        ON E.TEACHER_KEY = F.TEACHER_KEY
                        WHERE A.CTG_KEY IN (
                         SELECT CTG_KEY FROM T_CATEGORY
                            WHERE PARENT_KEY = #{menuCtgKey}
                        )
                        AND B.TYPE = 1
                        AND B.IS_SHOW = 1
                        AND B.IS_SELL =1
                        AND C.SUBJECT_CTG_KEY = TT.SUBJECT_CTG_KEY
                        AND C.STEP_CTG_KEY = 4266
                    )T
                    WHERE T.TEACHER_KEY = TT.TEACHER_KEY
                    GROUP BY T.TEACHER_KEY
                    ) as mockExamCnt
        FROM
        (
            SELECT
                    (SELECT NAME FROM T_USER Z WHERE Z.USER_KEY = F.USER_KEY) AS teacherName,
                    F.TEACHER_KEY,
                    C.STEP_CTG_KEY,
                    F.IMAGE_TEACHER_LIST,
                    C.SUBJECT_CTG_KEY,
                    A.CTG_KEY as subjectMenuKey
            FROM T_CATEGORY_GOODS A
            INNER JOIN T_GOODS B
            ON A.G_KEY = B.G_KEY
            INNER JOIN T_LEC C
            ON A.G_KEY = C.G_KEY
            INNER JOIN T_CATEGORY D
            ON C.STEP_CTG_KEY = D.CTG_KEY
            INNER JOIN T_GOODS_TEACHER_LINK E
            ON A.G_KEY = E.G_KEY
            INNER JOIN T_TEACHER F
            ON E.TEACHER_KEY = F.TEACHER_KEY
            WHERE A.CTG_KEY IN (
             SELECT CTG_KEY FROM T_CATEGORY
                WHERE PARENT_KEY = #{menuCtgKey}
            )
            AND B.TYPE = 1
            AND B.IS_SHOW = 1
            AND B.IS_SELL =1
            AND A.CTG_KEY = #{subjectMenuKey}
            <if test="teacherKeys.size  != 0">
                AND F.TEACHER_KEY IN
                <foreach collection="teacherKeys" item="teacherKey" separator="," open="(" close=")">
                    #{teacherKey}
                </foreach>
            </if>
            <if test="stepCtgKeys.size != 0">
                AND C.STEP_CTG_KEY IN
                <foreach collection="stepCtgKeys" item="stepCtgKey" separator="," open="(" close=")">
                    #{stepCtgKey}
                </foreach>
            </if>
        )TT
        GROUP BY TT.TEACHER_KEY, TT.teacherName, TT.IMAGE_TEACHER_LIST,TT.SUBJECT_CTG_KEY, TT.subjectMenuKey
        ORDER BY TT.SUBJECT_CTG_KEY ASC
    </select>

    <select id="selectLectureApplyTeacherTypeList2" resultType="LectureApplyTeacherTypeVO">
        SELECT
        TT.TEACHER_KEY, TT.teacherName, TT.IMAGE_TEACHER_LIST, TT.SUBJECT_CTG_KEY,
        (SELECT COUNT(T.TEACHER_KEY) FROM
        (
        SELECT F.TEACHER_KEY
        FROM T_CATEGORY_GOODS A
        INNER JOIN T_GOODS B
        ON A.G_KEY = B.G_KEY
        INNER JOIN T_LEC C
        ON A.G_KEY = C.G_KEY
        INNER JOIN T_CATEGORY D
        ON C.STEP_CTG_KEY = D.CTG_KEY
        INNER JOIN T_GOODS_TEACHER_LINK E
        ON A.G_KEY = E.G_KEY
        INNER JOIN T_TEACHER F
        ON E.TEACHER_KEY = F.TEACHER_KEY
        WHERE A.CTG_KEY IN (
        SELECT CTG_KEY FROM T_CATEGORY
        WHERE PARENT_KEY = #{menuCtgKey}
        )
        AND B.TYPE = 1
        AND B.IS_SHOW = 1
        AND B.IS_SELL =1
        AND C.SUBJECT_CTG_KEY = TT.SUBJECT_CTG_KEY
        AND C.STEP_CTG_KEY = 203
        )T
        WHERE T.TEACHER_KEY = TT.TEACHER_KEY
        GROUP BY T.TEACHER_KEY
        ) as theoryCnt,

        (SELECT COUNT(T.TEACHER_KEY) FROM
        (
        SELECT F.TEACHER_KEY
        FROM T_CATEGORY_GOODS A
        INNER JOIN T_GOODS B
        ON A.G_KEY = B.G_KEY
        INNER JOIN T_LEC C
        ON A.G_KEY = C.G_KEY
        INNER JOIN T_CATEGORY D
        ON C.STEP_CTG_KEY = D.CTG_KEY
        INNER JOIN T_GOODS_TEACHER_LINK E
        ON A.G_KEY = E.G_KEY
        INNER JOIN T_TEACHER F
        ON E.TEACHER_KEY = F.TEACHER_KEY
        WHERE A.CTG_KEY IN (
        SELECT CTG_KEY FROM T_CATEGORY
        WHERE PARENT_KEY = #{menuCtgKey}
        )
        AND B.TYPE = 1
        AND B.IS_SHOW = 1
        AND B.IS_SELL =1
        AND C.SUBJECT_CTG_KEY = TT.SUBJECT_CTG_KEY
        AND C.STEP_CTG_KEY = 205
        )T
        WHERE T.TEACHER_KEY = TT.TEACHER_KEY
        GROUP BY T.TEACHER_KEY
        ) as problemSolveCnt,

        (SELECT COUNT(T.TEACHER_KEY) FROM
        (
        SELECT F.TEACHER_KEY
        FROM T_CATEGORY_GOODS A
        INNER JOIN T_GOODS B
        ON A.G_KEY = B.G_KEY
        INNER JOIN T_LEC C
        ON A.G_KEY = C.G_KEY
        INNER JOIN T_CATEGORY D
        ON C.STEP_CTG_KEY = D.CTG_KEY
        INNER JOIN T_GOODS_TEACHER_LINK E
        ON A.G_KEY = E.G_KEY
        INNER JOIN T_TEACHER F
        ON E.TEACHER_KEY = F.TEACHER_KEY
        WHERE A.CTG_KEY IN (
        SELECT CTG_KEY FROM T_CATEGORY
        WHERE PARENT_KEY = #{menuCtgKey}
        )
        AND B.TYPE = 1
        AND B.IS_SHOW = 1
        AND B.IS_SELL =1
        AND C.SUBJECT_CTG_KEY = TT.SUBJECT_CTG_KEY
        AND C.STEP_CTG_KEY = 204
        )T
        WHERE T.TEACHER_KEY = TT.TEACHER_KEY
        GROUP BY T.TEACHER_KEY
        ) as singleSpecialCnt,

        (SELECT COUNT(T.TEACHER_KEY) FROM
        (
        SELECT F.TEACHER_KEY
        FROM T_CATEGORY_GOODS A
        INNER JOIN T_GOODS B
        ON A.G_KEY = B.G_KEY
        INNER JOIN T_LEC C
        ON A.G_KEY = C.G_KEY
        INNER JOIN T_CATEGORY D
        ON C.STEP_CTG_KEY = D.CTG_KEY
        INNER JOIN T_GOODS_TEACHER_LINK E
        ON A.G_KEY = E.G_KEY
        INNER JOIN T_TEACHER F
        ON E.TEACHER_KEY = F.TEACHER_KEY
        WHERE A.CTG_KEY IN (
        SELECT CTG_KEY FROM T_CATEGORY
        WHERE PARENT_KEY = #{menuCtgKey}
        )
        AND B.TYPE = 1
        AND B.IS_SHOW = 1
        AND B.IS_SELL =1
        AND C.SUBJECT_CTG_KEY = TT.SUBJECT_CTG_KEY
        AND C.STEP_CTG_KEY = 767
        )T
        WHERE T.TEACHER_KEY = TT.TEACHER_KEY
        GROUP BY T.TEACHER_KEY
        ) as prepareNoteCnt,

        (SELECT COUNT(T.TEACHER_KEY) FROM
        (
        SELECT F.TEACHER_KEY

        FROM T_CATEGORY_GOODS A
        INNER JOIN T_GOODS B
        ON A.G_KEY = B.G_KEY
        INNER JOIN T_LEC C
        ON A.G_KEY = C.G_KEY
        INNER JOIN T_CATEGORY D
        ON C.STEP_CTG_KEY = D.CTG_KEY
        INNER JOIN T_GOODS_TEACHER_LINK E
        ON A.G_KEY = E.G_KEY
        INNER JOIN T_TEACHER F
        ON E.TEACHER_KEY = F.TEACHER_KEY
        WHERE A.CTG_KEY IN (
        SELECT CTG_KEY FROM T_CATEGORY
        WHERE PARENT_KEY = #{menuCtgKey}
        )
        AND B.TYPE = 1
        AND B.IS_SHOW = 1
        AND B.IS_SELL =1
        AND C.SUBJECT_CTG_KEY = TT.SUBJECT_CTG_KEY
        AND C.STEP_CTG_KEY = 4266
        )T
        WHERE T.TEACHER_KEY = TT.TEACHER_KEY
        GROUP BY T.TEACHER_KEY
        ) as mockExamCnt
        FROM
        (
        SELECT
        (SELECT NAME FROM T_USER Z WHERE Z.USER_KEY = F.USER_KEY) AS teacherName,
        F.TEACHER_KEY,
        C.STEP_CTG_KEY,
        F.IMAGE_TEACHER_LIST,
        C.SUBJECT_CTG_KEY,
        A.CTG_KEY as subjectMenuKey
        FROM T_CATEGORY_GOODS A
        INNER JOIN T_GOODS B
        ON A.G_KEY = B.G_KEY
        INNER JOIN T_LEC C
        ON A.G_KEY = C.G_KEY
        INNER JOIN T_CATEGORY D
        ON C.STEP_CTG_KEY = D.CTG_KEY
        INNER JOIN T_GOODS_TEACHER_LINK E
        ON A.G_KEY = E.G_KEY
        INNER JOIN T_TEACHER F
        ON E.TEACHER_KEY = F.TEACHER_KEY
        WHERE A.CTG_KEY IN (
        SELECT CTG_KEY FROM T_CATEGORY
        WHERE PARENT_KEY = #{menuCtgKey}
        )
        AND B.TYPE = 1
        AND B.IS_SHOW = 1
        AND B.IS_SELL =1
        AND F.IMAGE_TEACHER_LIST IS NOT NULL
        AND C.SUBJECT_CTG_KEY = #{subjectMenuKey}
        <if test="teacherKeys.size  != 0">
            AND F.TEACHER_KEY IN
            <foreach collection="teacherKeys" item="teacherKey" separator="," open="(" close=")">
                #{teacherKey}
            </foreach>
        </if>
        <if test="stepCtgKeys.size != 0">
            AND C.STEP_CTG_KEY IN
            <foreach collection="stepCtgKeys" item="stepCtgKey" separator="," open="(" close=")">
                #{stepCtgKey}
            </foreach>
        </if>
        )TT
        GROUP BY TT.TEACHER_KEY, TT.teacherName, TT.IMAGE_TEACHER_LIST,TT.SUBJECT_CTG_KEY
        ORDER BY TT.SUBJECT_CTG_KEY ASC
    </select>

    <select id="selectLectureApplySubjectListBySubjectKey" resultType="TCategoryVO">
        SELECT * FROM (
            SELECT
                C.SUBJECT_CTG_KEY as ctgKey,
                (select name from t_category Z where Z.ctg_key = C.SUBJECT_CTG_KEY) as name
            FROM T_CATEGORY_GOODS A
            INNER JOIN T_GOODS B
            ON A.G_KEY = B.G_KEY
            INNER JOIN T_LEC C
            ON A.G_KEY = C.G_KEY
            INNER JOIN T_CATEGORY D
            ON C.STEP_CTG_KEY = D.CTG_KEY
            INNER JOIN T_GOODS_TEACHER_LINK E
            ON A.G_KEY = E.G_KEY
            INNER JOIN T_TEACHER F
            ON E.TEACHER_KEY = F.TEACHER_KEY
            WHERE A.CTG_KEY IN
            ( SELECT CTG_KEY FROM T_CATEGORY WHERE PARENT_KEY = #{menuCtgKey} )
            AND B.TYPE = #{goodsType}
            AND B.IS_SHOW = 1
            AND B.IS_SELL =1
            AND C.SUBJECT_CTG_KEY IS NOT NULL
            GROUP BY C.SUBJECT_CTG_KEY
            ORDER BY C.SUBJECT_CTG_KEY ASC
        )T
        WHERE 1=1
        AND T.name IS NOT NULL
    </select>

    <select id="selectLectureApplySubjectListFromSearch" resultType="TCategoryVO">
        SELECT * FROM
        (
           SELECT C.SUBJECT_CTG_KEY as ctgKey,
                    (select name from t_category Z where Z.ctg_key = C.SUBJECT_CTG_KEY) as name
            FROM T_CATEGORY_GOODS A
            INNER JOIN T_GOODS B
            ON A.G_KEY = B.G_KEY
            INNER JOIN T_LEC C
            ON A.G_KEY = C.G_KEY
            INNER JOIN T_CATEGORY D
            ON C.STEP_CTG_KEY = D.CTG_KEY
            INNER JOIN T_GOODS_TEACHER_LINK E
            ON A.G_KEY = E.G_KEY
            INNER JOIN T_TEACHER F
            ON E.TEACHER_KEY = F.TEACHER_KEY
            WHERE A.CTG_KEY IN
            ( SELECT CTG_KEY FROM T_CATEGORY WHERE PARENT_KEY = #{menuCtgKey} )
            AND B.TYPE = #{goodsType}
            AND B.IS_SHOW = 1
            AND B.IS_SELL =1
            AND C.SUBJECT_CTG_KEY IS NOT NULL
            GROUP BY C.SUBJECT_CTG_KEY
            ORDER BY C.SUBJECT_CTG_KEY ASC
        ) Z
        WHERE 1=1
        AND Z.name IS NOT NULL
        <if test="subjectMenuKeys.size  != 0">
            AND Z.ctgKey IN
            <foreach collection="subjectMenuKeys" item="subjectKey" separator="," open="(" close=")">
                #{subjectKey}
            </foreach>
        </if>
    </select>

    <select id="selectSpecialPackageSubjectListFromSearch" resultType="TCategoryVO">
        SELECT * FROM (
            SELECT
                C.SUBJECT_CTG_KEY as ctgKey,
                (select name from t_category Z where Z.ctg_key = C.SUBJECT_CTG_KEY) as name
            FROM T_LINK_KEY A
            INNER JOIN T_GOODS B
            ON A.RES_KEY = B.G_KEY
            INNER JOIN T_LEC C
            ON B.G_KEY = C.G_KEY
            INNER JOIN T_CATEGORY D
            ON C.STEP_CTG_KEY = D.CTG_KEY
            INNER JOIN T_GOODS_TEACHER_LINK E
            ON B.G_KEY = E.G_KEY
            INNER JOIN T_TEACHER F
            ON E.TEACHER_KEY = F.TEACHER_KEY
            WHERE A.REQ_TYPE = 1
            AND A.RES_TYPE = 1
            AND A.REQ_KEY IN (
                SELECT B.G_KEY
                FROM T_CATEGORY_GOODS A
                INNER JOIN T_GOODS B
                ON A.G_KEY = B.G_KEY
                INNER JOIN T_PROMOTION C
                ON A.G_KEY = C.G_KEY
                WHERE B.TYPE = 5
                AND B.IS_SHOW = 1
                AND B.IS_SELL =1
                AND A.CTG_KEY = #{menuCtgKey}
            )
            GROUP BY C.SUBJECT_CTG_KEY
            ORDER BY C.SUBJECT_CTG_KEY ASC
         )
        WHERE 1=1
        <if test="subjectMenuKeys.size  != 0">
            AND Z.ctgKey IN
            <foreach collection="subjectMenuKeys" item="subjectKey" separator="," open="(" close=")">
                #{subjectKey}
            </foreach>
        </if>
    </select>

    <select id="selectSpecialPackageTeacherList" resultType="LectureApplyTeacherVO">
        SELECT * FROM (
            SELECT
                   F.TEACHER_KEY,
                   (SELECT NAME FROM T_USER Z WHERE Z.USER_KEY = F.USER_KEY) as teacherName
            FROM T_LINK_KEY A
            INNER JOIN T_GOODS B
            ON A.RES_KEY = B.G_KEY
            INNER JOIN T_LEC C
            ON B.G_KEY = C.G_KEY
            INNER JOIN T_CATEGORY D
            ON C.STEP_CTG_KEY = D.CTG_KEY
            INNER JOIN T_GOODS_TEACHER_LINK E
            ON B.G_KEY = E.G_KEY
            INNER JOIN T_TEACHER F
            ON E.TEACHER_KEY = F.TEACHER_KEY
            WHERE A.REQ_TYPE = 1
            AND A.RES_TYPE = 1
            AND A.REQ_KEY IN (
                SELECT B.G_KEY
                FROM T_CATEGORY_GOODS A
                INNER JOIN T_GOODS B
                ON A.G_KEY = B.G_KEY
                INNER JOIN T_PROMOTION C
                ON A.G_KEY = C.G_KEY
                WHERE B.TYPE = 5
                AND B.IS_SHOW = 1
                AND B.IS_SELL =1
                AND A.CTG_KEY = #{menuCtgKey}
            )
        ) Z
        GROUP BY Z.TEACHER_KEY, Z.teacherName
        ORDER BY Z.TEACHER_KEY ASC
    </select>

    <select id="selectPackagePriceKey" resultType="int">
        SELECT PRICE_KEY FROM T_GOODS_PRICE_OPTION WHERE G_KEY = #{gKey}
    </select>

    <select id="selectGoodsInfoByRetake" resultType="VideoLectureDetailVO">
        SELECT A.G_KEY, A.TYPE,
               (SELECT LIMIT_DAY FROM T_LEC Z WHERE Z.G_KEY = A.G_KEY)as limitDay,
               (SELECT PRICE FROM T_GOODS_PRICE_OPTION Z where Z.PRICE_KEY = #{priceKey}) as price,
               (SELECT SELL_PRICE FROM T_GOODS_PRICE_OPTION Z where Z.PRICE_KEY = #{priceKey}) as sellPrice,
               (SELECT EXTEND_PERCENT  FROM T_GOODS_PRICE_OPTION Z where Z.PRICE_KEY = #{priceKey}) as extendPercent,
               (SELECT KIND  FROM T_GOODS_PRICE_OPTION Z where Z.PRICE_KEY = #{priceKey}) as kind
        FROM T_GOODS A
        WHERE A.G_KEY = #{gKey}
    </select>

    <select id="selectZianPassEndList" resultType="ZianPassEndListVO">
        SELECT Z.* FROM (
            SELECT
                C.NAME as goodsName, A.J_G_KEY, A.J_KEY, A.G_KEY, A.PRICE_KEY,
                TO_CHAR(B.INDATE, 'YYYY.MM.DD') start_dt,
                TO_CHAR((B.INDATE + (A.KIND * 30)), 'YYYY.MM.DD') as end_dt,
                <![CDATA[
                    CASE WHEN TO_CHAR((B.INDATE + (A.KIND * 30) + 90), 'YYYY-MM-DD') <= sysdate
                ]]>
                THEN 'N'
                ELSE 'Y'
                END AS retakeYn
            FROM T_ORDER_GOODS A
            INNER JOIN T_ORDER B
            ON A.J_KEY = B.J_KEY
            INNER JOIN T_GOODS C
            ON A.G_KEY = C.G_KEY
            WHERE A.TYPE = 5
            AND A.PM_TYPE = 100
            AND B.PAY_TYPE NOT IN (20)
            AND B.PAY_STATUS = 2
            AND A.USER_KEY = #{userKey}
            ORDER BY A.J_G_KEY ASC
        )Z
        WHERE 1=1
        <![CDATA[
            AND Z.end_dt <= sysdate
        ]]>
    </select>
    
    <select id="selectGoodsInfoByJLecKey" resultType="VideoLectureDetailVO">
        SELECT A.G_KEY, A.NAME as goodsName, D.NAME as teacherName
        FROM T_GOODS A
        INNER JOIN T_GOODS_TEACHER_LINK B
        ON A.G_KEY = B.G_KEY
        INNER JOIN T_TEACHER C
        ON B.TEACHER_KEY = C.TEACHER_KEY
        INNER JOIN T_USER D
        ON C.USER_KEY = D.USER_KEY
        WHERE 1=1
        AND A.G_KEY = (
            SELECT G_KEY
            FROM T_ORDER_LEC A
            INNER JOIN T_ORDER_GOODS B
            ON A.J_G_KEY = B.J_G_KEY
            WHERE A.J_LEC_KEY = #{jLecKey}
        )
    </select>

    <select id="selectExamOnOffKey" resultType="TLinkKeyVO">
        SELECT * FROM T_LINK_KEY WHERE REQ_KEY = #{gKey}
    </select>

    <select id="selectExamOnOffKeyByExamKey" resultType="TLinkKeyVO">
        SELECT * FROM T_LINK_KEY WHERE RES_KEY = #{examKey} AND RES_TYPE = 2
    </select>

    <select id="selectVideoGoodsMultiple" resultType="double">
        SELECT C.MULTIPLE
        FROM T_ORDER_LEC A
        LEFT JOIN T_ORDER_GOODS B
        ON A.J_G_KEY = B.J_G_KEY
        LEFT JOIN T_LEC C
        ON B.G_KEY = C.G_KEY
        WHERE J_LEC_KEY = #{jLecKey}
    </select>

    <select id="selectVideoGoodsJGKey" resultType="int">
        SELECT B.J_G_KEY
        FROM T_ORDER_LEC A
        LEFT JOIN T_ORDER_GOODS B
        ON A.J_G_KEY = B.J_G_KEY
        LEFT JOIN T_LEC C
        ON B.G_KEY = C.G_KEY
        WHERE A.J_LEC_KEY = #{jLecKey}
    </select>

    <select id="selectTOrderLecCurriInfo" resultType="TOrderLecCurriVO">
        SELECT * FROM T_ORDER_LEC_CURRI
        WHERE 1=1
        AND J_LEC_KEY = #{jLecKey}
        AND CURRI_KEY = #{curriKey}
    </select>

    <select id="selectTOrderLecStartDt" resultType="String">
        SELECT START_DT FROM T_ORDER_LEC WHERE J_LEC_KEY = #{jLecKey}
    </select>

    <update id="updateTOrderLecPauseCnt" parameterType="Integer">
        UPDATE T_ORDER_LEC
        <set>
            <if test="pauseDay == 0">
                PAUSE_START_DT = '',
            </if>
            <if test="pauseDay > 0">
                PAUSE_START_DT = sysdate,
                PAUSE_CNT = PAUSE_CNT + 1,
            </if>
            PAUSE_DAY = #{pauseDay}
        </set>
        WHERE J_LEC_KEY = #{jLecKey}
    </update>

    <update id="updateTOrderLecStartDt" parameterType="Integer">
        UPDATE T_ORDER_LEC
        <set>
           START_DT = sysdate
        </set>
        WHERE J_LEC_KEY = #{jLecKey}
    </update>

    <update id="updateTOrderLecCurri" parameterType="TOrderLecCurriVO">
        UPDATE T_ORDER_LEC_CURRI
        SET TIME = TIME + #{time}
        WHERE 1=1
        AND J_LEC_KEY = #{jLecKey}
        AND CURRI_KEY = #{curriKey}
    </update>

    <update id="updateTOrderLecCurriByMobile" parameterType="TOrderLecCurriVO">
        UPDATE T_ORDER_LEC_CURRI
        SET TIME = #{time}
        WHERE 1=1
        AND J_LEC_KEY = #{jLecKey}
        AND CURRI_KEY = #{curriKey}
    </update>

    <update id="updateTOrderLecStartDtByUserKey" parameterType="int">
        UPDATE T_ORDER_LEC
        SET START_DT = sysdate
        WHERE J_G_KEY IN (
            SELECT J_G_KEY FROM T_ORDER_GOODS WHERE USER_KEY = #{userKey} AND TYPE = 1
        )
        AND START_DT IS NULL
    </update>

    <insert id="insertTOrderLecStartStopLog" parameterType="TOrderLecStartStopLogVO">
        <selectKey resultType="Integer" keyProperty="idx" order="BEFORE">
            SELECT T_ORDER_LEC_START_STOP_LOG_SEQ.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO T_ORDER_LEC_START_STOP_LOG
        (
            IDX, J_LEC_KEY, LOG_TYPE
        )
        VALUES
        (
            #{idx}, #{jLecKey}, #{logType}
        )
    </insert>

    <insert id="insertTOrderLecCurri" parameterType="TOrderLecCurriVO">
        <selectKey resultType="Long" keyProperty="jCurriKey" order="BEFORE">
            SELECT T_ORDER_LEC_CURRI_SEQ.nextval FROM DUAL
        </selectKey>
        INSERT INTO T_ORDER_LEC_CURRI
        (
            J_CURRI_KEY, J_LEC_KEY, CURRI_KEY, "TIME", MOBILE_TIME, MAX_READ_COUNT, EXAM_EXPECTATION_KEY, EXAM_OTHER_KEY, EXAM_QUESTION_EXPECT_COUNT, EXAM_QUESTION_OTHER_COUNT
        )
        VALUES
        (
            #{jCurriKey}, #{jLecKey}, #{curriKey}, #{time}, 0, 0, 0, 0, 0, 0
        )
    </insert>
</mapper>
